const e=JSON.parse('{"key":"v-29108137","path":"/fundamental/design_atterns/3.Factory%20Pattern.html","title":"工厂模式","lang":"zh-CN","frontmatter":{"order":3,"author":null,"title":"工厂模式","category":["设计模式"],"description":"工厂模式的核心思想是我不直接创建对象，而是让一个专门的‘工厂’帮我创建对象。”**这样做的好处是代码更加灵活，扩展性更强，而且可以隐藏对象的创建细节。 工厂模式的核心概念 1. 客户端（Client）：需要使用对象的地方。 2. 工厂（Factory）：负责创建对象的地方。 3. 产品（Product）：被创建的对象。 工厂模式的类型 工厂模式有几种变...","head":[["meta",{"property":"og:url","content":"https://tim-qtp.github.io/blog/blog/fundamental/design_atterns/3.Factory%20Pattern.html"}],["meta",{"property":"og:site_name","content":"Qtp"}],["meta",{"property":"og:title","content":"工厂模式"}],["meta",{"property":"og:description","content":"工厂模式的核心思想是我不直接创建对象，而是让一个专门的‘工厂’帮我创建对象。”**这样做的好处是代码更加灵活，扩展性更强，而且可以隐藏对象的创建细节。 工厂模式的核心概念 1. 客户端（Client）：需要使用对象的地方。 2. 工厂（Factory）：负责创建对象的地方。 3. 产品（Product）：被创建的对象。 工厂模式的类型 工厂模式有几种变..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-12T01:17:00.000Z"}],["meta",{"property":"article:author","content":"tim-qtp"}],["meta",{"property":"article:modified_time","content":"2025-03-12T01:17:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"工厂模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-12T01:17:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"tim-qtp\\",\\"url\\":\\"https://github.com/tim-qtp/\\"}]}"]]},"headers":[{"level":3,"title":"工厂模式的核心概念","slug":"工厂模式的核心概念","link":"#工厂模式的核心概念","children":[]},{"level":3,"title":"工厂模式的类型","slug":"工厂模式的类型","link":"#工厂模式的类型","children":[]},{"level":2,"title":"1. 简单工厂模式","slug":"_1-简单工厂模式","link":"#_1-简单工厂模式","children":[{"level":3,"title":"场景","slug":"场景","link":"#场景","children":[]},{"level":3,"title":"实现代码","slug":"实现代码","link":"#实现代码","children":[]},{"level":3,"title":"大白话解释","slug":"大白话解释","link":"#大白话解释","children":[]}]},{"level":2,"title":"2. 工厂方法模式","slug":"_2-工厂方法模式","link":"#_2-工厂方法模式","children":[{"level":3,"title":"场景","slug":"场景-1","link":"#场景-1","children":[]},{"level":3,"title":"实现代码","slug":"实现代码-1","link":"#实现代码-1","children":[]},{"level":3,"title":"大白话解释","slug":"大白话解释-1","link":"#大白话解释-1","children":[]}]},{"level":2,"title":"3. 抽象工厂模式","slug":"_3-抽象工厂模式","link":"#_3-抽象工厂模式","children":[{"level":3,"title":"场景","slug":"场景-2","link":"#场景-2","children":[]},{"level":3,"title":"实现代码","slug":"实现代码-2","link":"#实现代码-2","children":[]},{"level":3,"title":"大白话解释","slug":"大白话解释-2","link":"#大白话解释-2","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"4. 实际java开发中，有哪些常用的工厂模式呢","slug":"_4-实际java开发中-有哪些常用的工厂模式呢","link":"#_4-实际java开发中-有哪些常用的工厂模式呢","children":[{"level":3,"title":"1. Spring 框架","slug":"_1-spring-框架","link":"#_1-spring-框架","children":[]},{"level":3,"title":"2. JDBC 的 DriverManager","slug":"_2-jdbc-的-drivermanager","link":"#_2-jdbc-的-drivermanager","children":[]}]}],"git":{"createdTime":1741742220000,"updatedTime":1741742220000,"contributors":[{"name":"tim-qtp","email":"2469100031@qq.com","commits":1}]},"readingTime":{"minutes":5.83,"words":1749},"filePathRelative":"fundamental/design_atterns/3.Factory Pattern.md","localizedDate":"2025年3月12日","autoDesc":true,"excerpt":""}');export{e as data};
