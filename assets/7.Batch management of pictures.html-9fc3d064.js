import{_ as n,W as s,X as a,a2 as t}from"./framework-6a3aa88c.js";const p={},e=t(`<p>类似以下效果：</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503211709599.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>代码如下：</p><p>开发批量修改图片服务，依次完成参数校验、空间权限校验、图片查询、批量更新操作：4AeqD6wp8ZemHEHZXii0QseGHx9Ks4t5/a/SqKw4Xao=</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 1. 查询指定图片，仅选择需要的字段</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Picture</span><span class="token punctuation">&gt;</span></span> pictureList <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">Picture</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token class-name">Picture</span><span class="token operator">::</span><span class="token function">getSpaceId</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Picture</span><span class="token operator">::</span><span class="token function">getSpaceId</span><span class="token punctuation">,</span> spaceId<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span><span class="token class-name">Picture</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> pictureIdList<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>pictureList<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 2. 更新分类和标签</span>
pictureList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>picture <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>category<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        picture<span class="token punctuation">.</span><span class="token function">setCategory</span><span class="token punctuation">(</span>category<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>tags<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        picture<span class="token punctuation">.</span><span class="token function">setTags</span><span class="token punctuation">(</span><span class="token class-name">JSONUtil</span><span class="token punctuation">.</span><span class="token function">toJsonStr</span><span class="token punctuation">(</span>tags<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 3. 批量更新</span>
<span class="token keyword">boolean</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateBatchById</span><span class="token punctuation">(</span>pictureList<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ThrowUtils</span><span class="token punctuation">.</span><span class="token function">throwIf</span><span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">,</span> <span class="token class-name">ErrorCode</span><span class="token punctuation">.</span><span class="token constant">OPERATION_ERROR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对这个项目来说，用户要处理的数据量不大，上述代码已经能够满足需求。但如果要处理大量数据，可以使用线程池 + 分批 + 并发进行优化，参考代码如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Resource</span>
<span class="token keyword">private</span> <span class="token class-name">ThreadPoolExecutor</span> customExecutor<span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 批量编辑图片分类和标签
 */</span>
<span class="token annotation punctuation">@Override</span>
<span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>rollbackFor <span class="token operator">=</span> <span class="token class-name">Exception</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">batchEditPictureMetadata</span><span class="token punctuation">(</span><span class="token class-name">PictureBatchEditRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">Long</span> spaceId<span class="token punctuation">,</span> <span class="token class-name">Long</span> loginUserId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 参数校验</span>
    <span class="token function">validateBatchEditRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> spaceId<span class="token punctuation">,</span> loginUserId<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 查询空间下的图片</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Picture</span><span class="token punctuation">&gt;</span></span> pictureList <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Picture</span><span class="token operator">::</span><span class="token function">getSpaceId</span><span class="token punctuation">,</span> spaceId<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span><span class="token class-name">Picture</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">getPictureIds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>pictureList<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BusinessException</span><span class="token punctuation">(</span><span class="token class-name">ErrorCode</span><span class="token punctuation">.</span><span class="token constant">NOT_FOUND_ERROR</span><span class="token punctuation">,</span> <span class="token string">&quot;指定的图片不存在或不属于该空间&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 分批处理避免长事务</span>
    <span class="token keyword">int</span> batchSize <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CompletableFuture</span><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> futures <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> pictureList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> batchSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Picture</span><span class="token punctuation">&gt;</span></span> batch <span class="token operator">=</span> pictureList<span class="token punctuation">.</span><span class="token function">subList</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>i <span class="token operator">+</span> batchSize<span class="token punctuation">,</span> pictureList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 异步处理每批数据</span>
        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> future <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">runAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            batch<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>picture <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token comment">// 编辑分类和标签</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getCategory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    picture<span class="token punctuation">.</span><span class="token function">setCategory</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getCategory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getTags</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    picture<span class="token punctuation">.</span><span class="token function">setTags</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">getTags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">boolean</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateBatchById</span><span class="token punctuation">(</span>batch<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BusinessException</span><span class="token punctuation">(</span><span class="token class-name">ErrorCode</span><span class="token punctuation">.</span><span class="token constant">OPERATION_ERROR</span><span class="token punctuation">,</span> <span class="token string">&quot;批量更新图片失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> customExecutor<span class="token punctuation">)</span><span class="token punctuation">;</span>

        futures<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>future<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 等待所有任务完成</span>
    <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">allOf</span><span class="token punctuation">(</span>futures<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-分批处理避免长事务" tabindex="-1"><a class="header-anchor" href="#_1-分批处理避免长事务" aria-hidden="true">#</a> 1. <strong>分批处理避免长事务</strong></h3><ul><li><strong><code>batchSize = 100</code></strong>：每批次处理 100 条数据。</li><li><strong><code>pictureList</code></strong>：需要处理的图片列表。</li><li><strong><code>subList</code></strong>：将 <code>pictureList</code> 分成多个小批次，每批次最多包含 <code>batchSize</code> 条数据。</li></ul><h3 id="_2-异步处理每批数据" tabindex="-1"><a class="header-anchor" href="#_2-异步处理每批数据" aria-hidden="true">#</a> 2. <strong>异步处理每批数据</strong></h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> future <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">runAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    batch<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>picture <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// 编辑分类和标签</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getCategory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            picture<span class="token punctuation">.</span><span class="token function">setCategory</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getCategory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getTags</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            picture<span class="token punctuation">.</span><span class="token function">setTags</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">getTags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateBatchById</span><span class="token punctuation">(</span>batch<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BusinessException</span><span class="token punctuation">(</span><span class="token class-name">ErrorCode</span><span class="token punctuation">.</span><span class="token constant">OPERATION_ERROR</span><span class="token punctuation">,</span> <span class="token string">&quot;批量更新图片失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> customExecutor<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong><code>CompletableFuture.runAsync</code></strong>：异步执行任务。</li><li><strong><code>batch.forEach</code></strong>：对每批次中的每张图片进行处理： <ul><li>如果请求中有分类信息（<code>request.getCategory()</code>），则更新图片的分类。</li><li>如果请求中有标签信息（<code>request.getTags()</code>），则将标签拼接成字符串并更新图片的标签。</li></ul></li><li><strong><code>updateBatchById(batch)</code></strong>：批量更新数据库中的图片数据。</li><li><strong><code>BusinessException</code></strong>：如果更新失败，抛出业务异常。</li></ul><hr><h3 id="_3-将异步任务加入列表" tabindex="-1"><a class="header-anchor" href="#_3-将异步任务加入列表" aria-hidden="true">#</a> 3. <strong>将异步任务加入列表</strong></h3><p>java</p><p>复制</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>futures.add(future);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>将每个批次的异步任务（<code>CompletableFuture</code>）加入 <code>futures</code> 列表，方便后续统一管理。</li></ul><hr><h3 id="_4-等待所有任务完成" tabindex="-1"><a class="header-anchor" href="#_4-等待所有任务完成" aria-hidden="true">#</a> 4. <strong>等待所有任务完成</strong></h3><p>java</p><p>复制</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>CompletableFuture.allOf(futures.toArray(new CompletableFuture[0])).join();
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong><code>CompletableFuture.allOf</code></strong>：等待所有异步任务完成。</li><li><strong><code>join()</code></strong>：阻塞当前线程，直到所有任务执行完毕。</li></ul><hr><h3 id="_5-线程池配置" tabindex="-1"><a class="header-anchor" href="#_5-线程池配置" aria-hidden="true">#</a> 5. <strong>线程池配置</strong></h3><p>java</p><p>复制</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>customExecutor
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong><code>customExecutor</code></strong>：自定义的线程池，用于控制异步任务的并发度。</li><li>如果没有显式传入线程池，<code>CompletableFuture</code> 会使用默认的 <code>ForkJoinPool</code>。</li></ul>`,30),c=[e];function o(u,l){return s(),a("div",null,c)}const k=n(p,[["render",o],["__file","7.Batch management of pictures.html.vue"]]);export{k as default};
