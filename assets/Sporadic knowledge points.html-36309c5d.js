import{_ as n,W as a,X as s,a2 as e}from"./framework-6a3aa88c.js";const t={},p=e(`<h3 id="_1、去掉请求路径的前缀" tabindex="-1"><a class="header-anchor" href="#_1、去掉请求路径的前缀" aria-hidden="true">#</a> 1、去掉请求路径的前缀</h3><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>
      <span class="token key atrule">routes</span><span class="token punctuation">:</span>
        <span class="token comment"># 商品服务路由</span>
        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> goods_route
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//seckill<span class="token punctuation">-</span>goods
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
          <span class="token punctuation">-</span> Path=/api/skuAct/<span class="token important">**</span><span class="token punctuation">,</span>/api/activity/<span class="token important">**</span><span class="token punctuation">,</span>/api/brand/<span class="token important">**</span><span class="token punctuation">,</span>/api/category/<span class="token important">**</span><span class="token punctuation">,</span>/api/seckillTime/<span class="token important">**</span><span class="token punctuation">,</span>/api/sku/<span class="token important">**</span>
          <span class="token key atrule">filters</span><span class="token punctuation">:</span>
          <span class="token punctuation">-</span> StripPrefix=1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>filters</code>: 过滤器链，这里使用 <code>StripPrefix=1</code> 过滤器来去掉请求路径的前缀。<code>StripPrefix=1</code> 意味着去掉请求路径中的第一个部分，防止在转发请求时带有不必要的前缀。</p><h3 id="_2、management-配置" tabindex="-1"><a class="header-anchor" href="#_2、management-配置" aria-hidden="true">#</a> 2、management 配置</h3><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">management</span><span class="token punctuation">:</span>
  <span class="token key atrule">endpoint</span><span class="token punctuation">:</span>
    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>
      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">web</span><span class="token punctuation">:</span>
      <span class="token key atrule">exposure</span><span class="token punctuation">:</span>
        <span class="token key atrule">include</span><span class="token punctuation">:</span> <span class="token string">&#39;*&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>management.endpoint.gateway.enabled: true</code></strong>: 启用 Spring Boot Actuator 的网关相关端点，允许通过管理端点监控网关的运行状态。</p><p><strong><code>management.endpoint.web.exposure.include: &#39;\\*&#39;</code></strong>: 暴露所有 Web 相关的管理端点，包括 <code>health</code>、<code>info</code> 等，以便进行健康检查和其他管理任务。</p><h3 id="_3、logging配置" tabindex="-1"><a class="header-anchor" href="#_3、logging配置" aria-hidden="true">#</a> 3、logging配置</h3><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">logging</span><span class="token punctuation">:</span>
  <span class="token key atrule">pattern</span><span class="token punctuation">:</span>
    <span class="token key atrule">console</span><span class="token punctuation">:</span> <span class="token string">&quot;%msg%n&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>console</code></strong>: #定义日志控制台输出的格式，这里仅输出消息体内容 <code>%msg</code> 和换行符 <code>%n</code>。</p><h3 id="_4、设置时区" tabindex="-1"><a class="header-anchor" href="#_4、设置时区" aria-hidden="true">#</a> 4、设置时区</h3><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">jackson</span><span class="token punctuation">:</span>
    <span class="token comment">#设置全局的 JSON 时间序列化时区为东八区（中国标准时间）。</span>
    <span class="token key atrule">time-zone</span><span class="token punctuation">:</span> GMT+8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5、设置bean" tabindex="-1"><a class="header-anchor" href="#_5、设置bean" aria-hidden="true">#</a> 5、设置Bean</h3><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">main</span><span class="token punctuation">:</span>
    <span class="token comment">#允许多个同名 Bean 定义覆盖，避免 Bean 冲突报错。</span>
    <span class="token key atrule">allow-bean-definition-overriding</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6、在intellij-idea中-快速找到控制类-controller类-中所有的方法" tabindex="-1"><a class="header-anchor" href="#_6、在intellij-idea中-快速找到控制类-controller类-中所有的方法" aria-hidden="true">#</a> 6、在IntelliJ IDEA中，快速找到控制类（Controller类）中所有的方法</h3><p>Alt + 7，Ctrl + F12</p><h3 id="_7、为什么要用feign呢" tabindex="-1"><a class="header-anchor" href="#_7、为什么要用feign呢" aria-hidden="true">#</a> 7、为什么要用Feign呢？</h3><p>为了实现不同微服务进行远程调用</p><p><code>seckill-search</code>的ES索引导入调用<code>seckill-goods</code>的<code>list</code>接口。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//1、seckill-search</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Sku</span><span class="token punctuation">&gt;</span></span> skus <span class="token operator">=</span> skuFeign<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//2、seckill-feign-api page和size传到地址参数里</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/sku/list/{page}/{size}&quot;</span><span class="token punctuation">)</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Sku</span><span class="token punctuation">&gt;</span></span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;page&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> page<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;size&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//3、seckill-goods</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/list/{page}/{size}&quot;</span> <span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Sku</span><span class="token punctuation">&gt;</span></span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span>  <span class="token keyword">int</span> page<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathVariable</span>  <span class="token keyword">int</span> size<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//调用SkuService实现分页条件查询Sku</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Sku</span><span class="token punctuation">&gt;</span></span> skus <span class="token operator">=</span> skuService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> skus<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8、计算总页数" tabindex="-1"><a class="header-anchor" href="#_8、计算总页数" aria-hidden="true">#</a> 8、计算总页数</h3><p>正好除尽，就<code>/</code>，不正好，那就再加个<code>1</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//2.根据总记录数计算总页数</span>
<span class="token keyword">int</span> totalpages <span class="token operator">=</span> total <span class="token operator">%</span> size <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> total <span class="token operator">/</span> size <span class="token operator">:</span> <span class="token punctuation">(</span>total <span class="token operator">/</span> size<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9、将sku数据转换成skuinfo" tabindex="-1"><a class="header-anchor" href="#_9、将sku数据转换成skuinfo" aria-hidden="true">#</a> 9、将Sku数据转换成SkuInfo</h3><p>先将<code>skus</code>List转化为json字符串，再将字符串转成SkuInfo</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Sku</span><span class="token punctuation">&gt;</span></span> skus <span class="token operator">=</span> skuFeign<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SkuInfo</span><span class="token punctuation">&gt;</span></span> skuInfos <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseArray</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>skus<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">SkuInfo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,26),o=[p];function c(l,i){return a(),s("div",null,o)}const r=n(t,[["render",c],["__file","Sporadic knowledge points.html.vue"]]);export{r as default};
