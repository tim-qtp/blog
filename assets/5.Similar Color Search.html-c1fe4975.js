import{_ as o,W as c,X as l,Z as a,$ as n,a1 as s,a2 as i,C as p}from"./framework-48328e23.js";const u={},r=n("p",null,"为了提升性能，避免每次搜索都实时计算图片主色调，建议在图片上传成功后立即提取主色调并存储到数据库的独立字段中。",-1),k=n("h3",{id:"_1、完整流程差不多是这个样子的",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1、完整流程差不多是这个样子的","aria-hidden":"true"},"#"),s(" 1、完整流程差不多是这个样子的：")],-1),d=n("ol",null,[n("li",null,"提取图片颜色：通过图像处理技术（云服务 API 或者 OpenCV 图像处理库）提取图片的颜色特征，可以采用主色调、颜色直方图等方法表示图片的颜色特征。"),n("li",null,"存储颜色特征：将提取的颜色数据存储到数据库中，以便后续快速检索。"),n("li",null,"用户查询输入：用户通过颜色选择器、RGB 值输入、或预定义颜色名称指定颜色查询条件。"),n("li",null,"计算相似度：根据用户指定的颜色，与数据库中的颜色特征进行相似度计算（如欧氏距离、余弦相似度等方法）。"),n("li",null,"返回结果：由于空间内的图片数量相对较少，可以按照图片与目标颜色的相似度进行排序，优先返回最符合用户要求的图片，而不是仅返回完全符合指定色调的图片。")],-1),m=n("h3",{id:"_2、怎么获取图片主色调",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2、怎么获取图片主色调","aria-hidden":"true"},"#"),s(" 2、怎么获取图片主色调？")],-1),v={href:"https://cloud.tencent.com/document/product/460/6928",target:"_blank",rel:"noopener noreferrer"},b={href:"https://cloud.tencent.com/document/product/460/36620",target:"_blank",rel:"noopener noreferrer"},g=i(`<p>除了方便之外，这个功能属于基础图片处理，官方提供的免费额度较高，差不多10TB，完全用不完：</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503211618408.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3、如何计算颜色相似度" tabindex="-1"><a class="header-anchor" href="#_3、如何计算颜色相似度" aria-hidden="true">#</a> 3、如何计算颜色相似度？</h3><p>数据库不支持直接按照颜色检索，用 like 检索又不符合颜色的特性。所以可以使用一些算法来解决。</p><p>此处使用 <strong>欧几里得距离</strong> 算法：颜色可以用 RGB 值表示，可以通过计算两种颜色 RGB 值之间的欧几里得距离来判断它们的相似度。</p><div class="language-latex line-numbers-mode" data-ext="latex"><pre class="language-latex"><code><span class="token equation string">\\[d = <span class="token equation-command regex">\\sqrt</span>{(R2 - R1)^2 + (G2 - G1)^2 + (B2 - B1)^2}\\]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>解释：</p><ul><li>R1, G1, B1：第一个颜色的 RGB 分量（红色、绿色、蓝色）。</li><li>R2, G2, B2：第二个颜色的 RGB 分量。</li><li>d：两个颜色之间的欧几里得距离。</li></ul><p>还有一些其他的方法，网上查的：</p><ul><li>余弦相似度 (Cosine Similarity)</li><li>曼哈顿距离 (Manhattan Distance)</li><li>Jaccard 相似度 (Jaccard Similarity)</li><li>平均颜色差异 (Mean Color Difference)</li><li>哈希算法 (Color Hashing)</li><li>色调、饱和度和亮度 (HSL) 差异</li></ul><h3 id="_4、后端开发" tabindex="-1"><a class="header-anchor" href="#_4、后端开发" aria-hidden="true">#</a> 4、后端开发</h3><p>修改 PictureUploadTemplate 的 buildResult 方法，直接从 ImageInfo 对象中就能获得主色调：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>uploadPictureResult<span class="token punctuation">.</span><span class="token function">setPicColor</span><span class="token punctuation">(</span>imageInfo<span class="token punctuation">.</span><span class="token function">getAve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="颜色相似度计算" tabindex="-1"><a class="header-anchor" href="#颜色相似度计算" aria-hidden="true">#</a> 颜色相似度计算</h4><p>直接利用 AI 来编写工具类：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 工具类：计算颜色相似度
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ColorSimilarUtils</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">ColorSimilarUtils</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 工具类不需要实例化</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 计算两个颜色的相似度
     *
     * <span class="token keyword">@param</span> <span class="token parameter">color1</span> 第一个颜色
     * <span class="token keyword">@param</span> <span class="token parameter">color2</span> 第二个颜色
     * <span class="token keyword">@return</span> 相似度（0到1之间，1为完全相同）
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">double</span> <span class="token function">calculateSimilarity</span><span class="token punctuation">(</span><span class="token class-name">Color</span> color1<span class="token punctuation">,</span> <span class="token class-name">Color</span> color2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> r1 <span class="token operator">=</span> color1<span class="token punctuation">.</span><span class="token function">getRed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> g1 <span class="token operator">=</span> color1<span class="token punctuation">.</span><span class="token function">getGreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> b1 <span class="token operator">=</span> color1<span class="token punctuation">.</span><span class="token function">getBlue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> r2 <span class="token operator">=</span> color2<span class="token punctuation">.</span><span class="token function">getRed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> g2 <span class="token operator">=</span> color2<span class="token punctuation">.</span><span class="token function">getGreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> b2 <span class="token operator">=</span> color2<span class="token punctuation">.</span><span class="token function">getBlue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 计算欧氏距离</span>
        <span class="token keyword">double</span> distance <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>r1 <span class="token operator">-</span> r2<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>g1 <span class="token operator">-</span> g2<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>b1 <span class="token operator">-</span> b2<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 计算相似度</span>
        <span class="token keyword">return</span> <span class="token number">1</span> <span class="token operator">-</span> distance <span class="token operator">/</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 根据十六进制颜色代码计算相似度
     *
     * <span class="token keyword">@param</span> <span class="token parameter">hexColor1</span> 第一个颜色的十六进制代码（如 0xFF0000）
     * <span class="token keyword">@param</span> <span class="token parameter">hexColor2</span> 第二个颜色的十六进制代码（如 0xFE0101）
     * <span class="token keyword">@return</span> 相似度（0到1之间，1为完全相同）
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">double</span> <span class="token function">calculateSimilarity</span><span class="token punctuation">(</span><span class="token class-name">String</span> hexColor1<span class="token punctuation">,</span> <span class="token class-name">String</span> hexColor2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Color</span> color1 <span class="token operator">=</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>hexColor1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Color</span> color2 <span class="token operator">=</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>hexColor2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">calculateSimilarity</span><span class="token punctuation">(</span>color1<span class="token punctuation">,</span> color2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 示例代码</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 测试颜色</span>
        <span class="token class-name">Color</span> color1 <span class="token operator">=</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token string">&quot;0xFF0000&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Color</span> color2 <span class="token operator">=</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token string">&quot;0xFE0101&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> similarity <span class="token operator">=</span> <span class="token function">calculateSimilarity</span><span class="token punctuation">(</span>color1<span class="token punctuation">,</span> color2<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;颜色相似度为：&quot;</span> <span class="token operator">+</span> similarity<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 测试十六进制方法</span>
        <span class="token keyword">double</span> hexSimilarity <span class="token operator">=</span> <span class="token function">calculateSimilarity</span><span class="token punctuation">(</span><span class="token string">&quot;0xFF0000&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;0xFE0101&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;十六进制颜色相似度为：&quot;</span> <span class="token operator">+</span> hexSimilarity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>searchPictureByColor</code>：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//  查询该空间下所有图片（必须有主色调）</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Picture</span><span class="token punctuation">&gt;</span></span> pictureList <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Picture</span><span class="token operator">::</span><span class="token function">getSpaceId</span><span class="token punctuation">,</span> spaceId<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span><span class="token class-name">Picture</span><span class="token operator">::</span><span class="token function">getPicColor</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 如果没有图片，直接返回空列表</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>pictureList<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">emptyList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 将目标颜色转为 Color 对象</span>
<span class="token class-name">Color</span> targetColor <span class="token operator">=</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>picColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//  计算相似度并排序</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Picture</span><span class="token punctuation">&gt;</span></span> sortedPictures <span class="token operator">=</span> pictureList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparingDouble</span><span class="token punctuation">(</span>picture <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// 提取图片主色调</span>
        <span class="token class-name">String</span> hexColor <span class="token operator">=</span> picture<span class="token punctuation">.</span><span class="token function">getPicColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 没有主色调的图片放到最后</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>hexColor<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Color</span> pictureColor <span class="token operator">=</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>hexColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 越大越相似</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token class-name">ColorSimilarUtils</span><span class="token punctuation">.</span><span class="token function">calculateSimilarity</span><span class="token punctuation">(</span>targetColor<span class="token punctuation">,</span> pictureColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">// 取前 12 个</span>
    <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 返回结果</span>
<span class="token keyword">return</span> sortedPictureList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">PictureVO</span><span class="token operator">::</span><span class="token function">objToVo</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5、接口开发" tabindex="-1"><a class="header-anchor" href="#_5、接口开发" aria-hidden="true">#</a> 5、接口开发</h3><p>1）请求封装类 SearchPictureByColorRequest，需要传入空间 id 和主色调：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SearchPictureByColorRequest</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 图片主色调
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> picColor<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 空间 id
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> spaceId<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2）开发接口：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/search/color&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">BaseResponse</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">PictureVO</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">searchPictureByColor</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">SearchPictureByColorRequest</span> searchPictureByColorRequest<span class="token punctuation">,</span> <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ThrowUtils</span><span class="token punctuation">.</span><span class="token function">throwIf</span><span class="token punctuation">(</span>searchPictureByColorRequest <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">ErrorCode</span><span class="token punctuation">.</span><span class="token constant">PARAMS_ERROR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> picColor <span class="token operator">=</span> searchPictureByColorRequest<span class="token punctuation">.</span><span class="token function">getPicColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Long</span> spaceId <span class="token operator">=</span> searchPictureByColorRequest<span class="token punctuation">.</span><span class="token function">getSpaceId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">User</span> loginUser <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">getLoginUser</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PictureVO</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> pictureService<span class="token punctuation">.</span><span class="token function">searchPictureByColor</span><span class="token punctuation">(</span>spaceId<span class="token punctuation">,</span> picColor<span class="token punctuation">,</span> loginUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">ResultUtils</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23);function h(f,y){const e=p("Mermaid"),t=p("ExternalLinkIcon");return c(),l("div",null,[r,k,d,a(e,{id:"mermaid-33",code:"eJydkE9LG0EYxu/9FMMEIQFDt0kxMYfC7s5u7K2U3oKHYhWlCykxYHuTtmpWTCLGf5ioiaDmYlw8mE2y6JeZd3b8Fg6z6+JRdk7D+z7P73lmlqzy2sLy90oVfSPvkDhqCfv7fVYbUnebel1oP/j2Fp5H6fQnpCUxd/6JNVK/fEa8MYTmIXUn3L4TY5ySGj2JwdmMpnBzDH/7UHPYgcPqAxi3cErm6FJNXtL4Qws2Ltn5Jb+9eLroCDM77dHJPUp+LWqw7r0PhrBb96+dFJ6XDCIZRgnTSSPiU/eGNXdFM2avs44dPMA/+R8AQqchnWYJ80HPHxxRt/G6RiAVHr/tUs+D8VVoM6WtWMKsOxJp0RpuR0EOf2zz3g5r7MG4GXqK0jMnoh73oX0GO6Onjbo/abGzDtSOeK8vdFI4NYVYdwheEwYndGTL2Wr1j7WIVLS0YlmFhGmSnKJMr1Yr5Z+LhUQ2mw3v6bWVH9XlQubX7+mFslWuFBKKorwCaCEgn9MNQ4sB0KMGqpJTYwBICJjNm9psPgbAiBpoM/qHGAAzBBCiKoTEABSjBjPZj7kYgLkQkFG0jPr2T3wGQ8p71Q=="}),m,n("p",null,[s("存储图片使用的 COS 对象存储服务已经整合了数据万象，自带获取图片主色调的功能，"),n("a",v,[s("参考文档"),a(t)]),s("。")]),n("p",null,[s("可以详细了解下服务的相关限制，比如 "),n("a",b,[s("数据万象的限制"),a(t)]),s("，不过一般情况下达不到限制。")]),g])}const w=o(u,[["render",h],["__file","5.Similar Color Search.html.vue"]]);export{w as default};
