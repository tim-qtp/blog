import{_ as n,W as s,X as a,a2 as t}from"./framework-6a3aa88c.js";const e={},p=t(`<h2 id="一、异常设计" tabindex="-1"><a class="header-anchor" href="#一、异常设计" aria-hidden="true">#</a> 一、异常设计：</h2><h3 id="_1、异常码说明" tabindex="-1"><a class="header-anchor" href="#_1、异常码说明" aria-hidden="true">#</a> 1、异常码说明</h3><p>异常码重点规范。</p><ol><li><p>错误码为字符串类型，共 5 位，分成两个部分：错误产生来源+四位数字编号。</p><p>说明：错误产生来源分为 A/B/C。A 表示错误来源于用户，比如参数错误，用户安装版本过低，用户支付 超时等问题；B 表示错误来源于当前系统，往往是业务逻辑出错，或程序健壮性差等问题；C 表示错误来源于第三方服务，比如 CDN 服务出错，消息投递超时等问题。四位数字编号从 0001 到 9999，大类之间的步长间距预留 100。</p></li><li><p>编号不与公司业务架构，更不与组织架构挂钩，一切与平台先到先申请的原则进行，审批生效，编号即被永久固定。</p><p>流程图：</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503101040146.png" alt="image-20250310104024999" tabindex="0" loading="lazy"><figcaption>image-20250310104024999</figcaption></figure></li></ol><p>异常码分类：一级宏观错误码、二级宏观错误码、三级详细错误码。</p><p><strong>客户端异常</strong></p><table><thead><tr><th>错误码</th><th>中文描述</th><th>说明</th></tr></thead><tbody><tr><td><strong><mark>A0001</mark></strong></td><td><strong><mark>用户端错误</mark></strong></td><td><strong><mark>一级宏观错误码</mark></strong></td></tr><tr><td>A0100</td><td>用户注册错误</td><td><mark>二级宏观错误码</mark></td></tr><tr><td>A0101</td><td>用户未同意隐私协议</td><td></td></tr><tr><td>A0102</td><td>注册国家或地区受限</td><td></td></tr><tr><td>A0110</td><td>用户名校验失败</td><td></td></tr><tr><td>A0111</td><td>用户名已存在</td><td></td></tr><tr><td>A0112</td><td>用户名包含敏感词</td><td></td></tr><tr><td>xxx</td><td>xxx</td><td></td></tr><tr><td>A0200</td><td>用户登录异常</td><td><mark>二级宏观错误码</mark></td></tr><tr><td>A02101</td><td>用户账户不存在</td><td></td></tr><tr><td>A02102</td><td>用户密码错误</td><td></td></tr><tr><td>A02103</td><td>用户账户已作废</td><td></td></tr><tr><td>xxx</td><td>xxx</td><td></td></tr></tbody></table><p><strong>服务端异常</strong></p><table><thead><tr><th>错误码</th><th>中文描述</th><th>说明</th></tr></thead><tbody><tr><td><strong><mark>B0001</mark></strong></td><td><strong><mark>系统执行出错</mark></strong></td><td><strong><mark>一级宏观错误码</mark></strong></td></tr><tr><td>B0100</td><td>系统执行超时</td><td><mark>二级宏观错误码</mark></td></tr><tr><td>B0101</td><td>系统订单处理超时</td><td></td></tr><tr><td>B0200</td><td>系统容灾功能被触发</td><td><mark>二级宏观错误码</mark></td></tr><tr><td>B0210</td><td>系统限流</td><td></td></tr><tr><td>B0220</td><td>系统功能降级</td><td></td></tr><tr><td>B0300</td><td>系统资源异常</td><td><mark>二级宏观错误码</mark></td></tr><tr><td>B0310</td><td>系统资源耗尽</td><td></td></tr><tr><td>B0311</td><td>系统磁盘空间耗尽</td><td></td></tr><tr><td>B0312</td><td>系统内存耗尽</td><td></td></tr><tr><td>xxx</td><td>xxx</td><td></td></tr></tbody></table><p><strong>远程调用异常</strong></p><table><thead><tr><th>错误码</th><th>中文描述</th><th>说明</th></tr></thead><tbody><tr><td><mark><strong>C0001</strong></mark></td><td><mark><strong>调用第三方服务出错</strong></mark></td><td><mark><strong>一级宏观错误码</strong></mark></td></tr><tr><td>C0100</td><td>中间件服务出错</td><td><mark>二级宏观错误码</mark></td></tr><tr><td>C0110</td><td>RPC服务出错</td><td></td></tr><tr><td>C0111</td><td>RPC服务未找到</td><td></td></tr><tr><td>C0112</td><td>RPC服务未注册</td><td></td></tr><tr><td>xxx</td><td>xxx</td><td></td></tr></tbody></table><h3 id="_2、异常码设计" tabindex="-1"><a class="header-anchor" href="#_2、异常码设计" aria-hidden="true">#</a> 2、异常码设计</h3><p>规约包，convention/errorcode</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 平台错误码
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IErrorCode</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 错误码
     */</span>
    <span class="token class-name">String</span> <span class="token function">code</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 错误信息
     */</span>
    <span class="token class-name">String</span> <span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 基础错误码定义
 */</span>
<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">BaseErrorCode</span> <span class="token keyword">implements</span> <span class="token class-name">IErrorCode</span> <span class="token punctuation">{</span>

    <span class="token comment">// ========== 一级宏观错误码 客户端错误 ==========</span>
    <span class="token function">CLIENT_ERROR</span><span class="token punctuation">(</span><span class="token string">&quot;A000001&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;用户端错误&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

    <span class="token comment">// ========== 二级宏观错误码 用户注册错误 ==========</span>
    <span class="token function">USER_REGISTER_ERROR</span><span class="token punctuation">(</span><span class="token string">&quot;A000100&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;用户注册错误&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">USER_NAME_VERIFY_ERROR</span><span class="token punctuation">(</span><span class="token string">&quot;A000110&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;用户名校验失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">USER_NAME_EXIST_ERROR</span><span class="token punctuation">(</span><span class="token string">&quot;A000111&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;用户名已存在&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">USER_NAME_SENSITIVE_ERROR</span><span class="token punctuation">(</span><span class="token string">&quot;A000112&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;用户名包含敏感词&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">USER_NAME_SPECIAL_CHARACTER_ERROR</span><span class="token punctuation">(</span><span class="token string">&quot;A000113&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;用户名包含特殊字符&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">PASSWORD_VERIFY_ERROR</span><span class="token punctuation">(</span><span class="token string">&quot;A000120&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;密码校验失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">PASSWORD_SHORT_ERROR</span><span class="token punctuation">(</span><span class="token string">&quot;A000121&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;密码长度不够&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">PHONE_VERIFY_ERROR</span><span class="token punctuation">(</span><span class="token string">&quot;A000151&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;手机格式校验失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

    <span class="token comment">// ========== 二级宏观错误码 系统请求缺少幂等Token ==========</span>
    <span class="token function">IDEMPOTENT_TOKEN_NULL_ERROR</span><span class="token punctuation">(</span><span class="token string">&quot;A000200&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;幂等Token为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">IDEMPOTENT_TOKEN_DELETE_ERROR</span><span class="token punctuation">(</span><span class="token string">&quot;A000201&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;幂等Token已被使用或失效&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

    <span class="token comment">// ========== 一级宏观错误码 系统执行出错 ==========</span>
    <span class="token function">SERVICE_ERROR</span><span class="token punctuation">(</span><span class="token string">&quot;B000001&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;系统执行出错&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token comment">// ========== 二级宏观错误码 系统执行超时 ==========</span>
    <span class="token function">SERVICE_TIMEOUT_ERROR</span><span class="token punctuation">(</span><span class="token string">&quot;B000100&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;系统执行超时&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

    <span class="token comment">// ========== 一级宏观错误码 调用第三方服务出错 ==========</span>
    <span class="token function">REMOTE_ERROR</span><span class="token punctuation">(</span><span class="token string">&quot;C000001&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;调用第三方服务出错&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> code<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> message<span class="token punctuation">;</span>

    <span class="token class-name">BaseErrorCode</span><span class="token punctuation">(</span><span class="token class-name">String</span> code<span class="token punctuation">,</span> <span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">=</span> message<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">code</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> code<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> message<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>convention/exception</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 抽象项目中三类异常体系，客户端异常、服务端异常以及远程服务调用异常
 *
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token class-name">ClientException</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token class-name">ServiceException</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token class-name">RemoteException</span></span>
 */</span>
<span class="token annotation punctuation">@Getter</span>
<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractException</span> <span class="token keyword">extends</span> <span class="token class-name">RuntimeException</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">String</span> errorCode<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">String</span> errorMessage<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">AbstractException</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> throwable<span class="token punctuation">,</span> <span class="token class-name">IErrorCode</span> errorCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> throwable<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>errorCode <span class="token operator">=</span> errorCode<span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>errorMessage <span class="token operator">=</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasLength</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span> <span class="token operator">?</span> message <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span>errorCode<span class="token punctuation">.</span><span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 客户端异常
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ClientException</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractException</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">ClientException</span><span class="token punctuation">(</span><span class="token class-name">IErrorCode</span> errorCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> errorCode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">ClientException</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">BaseErrorCode</span><span class="token punctuation">.</span><span class="token constant">CLIENT_ERROR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">ClientException</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">,</span> <span class="token class-name">IErrorCode</span> errorCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> errorCode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">ClientException</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> throwable<span class="token punctuation">,</span> <span class="token class-name">IErrorCode</span> errorCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> throwable<span class="token punctuation">,</span> errorCode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;ClientException{&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;code=&#39;&quot;</span> <span class="token operator">+</span> errorCode <span class="token operator">+</span> <span class="token string">&quot;&#39;,&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;message=&#39;&quot;</span> <span class="token operator">+</span> errorMessage <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span> <span class="token operator">+</span>
                <span class="token char">&#39;}&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、全局异常拦截器" tabindex="-1"><a class="header-anchor" href="#_3、全局异常拦截器" aria-hidden="true">#</a> 3、全局异常拦截器</h3><p>common/web</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 全局异常处理器
 *
 */</span>
<span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@RestControllerAdvice</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GlobalExceptionHandler</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 拦截参数验证异常
     */</span>
    <span class="token annotation punctuation">@SneakyThrows</span>
    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">MethodArgumentNotValidException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Result</span> <span class="token function">validExceptionHandler</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">MethodArgumentNotValidException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">BindingResult</span> bindingResult <span class="token operator">=</span> ex<span class="token punctuation">.</span><span class="token function">getBindingResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FieldError</span> firstFieldError <span class="token operator">=</span> <span class="token class-name">CollectionUtil</span><span class="token punctuation">.</span><span class="token function">getFirst</span><span class="token punctuation">(</span>bindingResult<span class="token punctuation">.</span><span class="token function">getFieldErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> exceptionStr <span class="token operator">=</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>firstFieldError<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">FieldError</span><span class="token operator">::</span><span class="token function">getDefaultMessage</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token constant">EMPTY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;[{}] {} [ex] {}&quot;</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getUrl</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">,</span> exceptionStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Results</span><span class="token punctuation">.</span><span class="token function">failure</span><span class="token punctuation">(</span><span class="token class-name">BaseErrorCode</span><span class="token punctuation">.</span><span class="token constant">CLIENT_ERROR</span><span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> exceptionStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 拦截应用内抛出的异常
     */</span>
    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">AbstractException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Result</span> <span class="token function">abstractException</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">AbstractException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ex<span class="token punctuation">.</span><span class="token function">getCause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;[{}] {} [ex] {}&quot;</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">getRequestURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ex<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ex<span class="token punctuation">.</span><span class="token function">getCause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token class-name">Results</span><span class="token punctuation">.</span><span class="token function">failure</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;[{}] {} [ex] {}&quot;</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">getRequestURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ex<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Results</span><span class="token punctuation">.</span><span class="token function">failure</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 拦截未捕获异常
     */</span>
    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">Throwable</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Result</span> <span class="token function">defaultErrorHandler</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> throwable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;[{}] {} &quot;</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getUrl</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">,</span> throwable<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Results</span><span class="token punctuation">.</span><span class="token function">failure</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getQueryString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> request<span class="token punctuation">.</span><span class="token function">getRequestURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> request<span class="token punctuation">.</span><span class="token function">getRequestURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;?&quot;</span> <span class="token operator">+</span> request<span class="token punctuation">.</span><span class="token function">getQueryString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、用户敏感信息脱敏展示" tabindex="-1"><a class="header-anchor" href="#二、用户敏感信息脱敏展示" aria-hidden="true">#</a> 二、用户敏感信息脱敏展示</h2><p>定义手机号和证件号的 Jackson 自定义序列化器，并在对应需要脱敏的敏感字段上指定自定义序列化器。</p><p>1）身份证号序列化器。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 身份证号脱敏反序列化
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IdCardDesensitizationSerializer</span> <span class="token keyword">extends</span> <span class="token class-name">JsonSerializer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token class-name">String</span> idCard<span class="token punctuation">,</span> <span class="token class-name">JsonGenerator</span> jsonGenerator<span class="token punctuation">,</span> <span class="token class-name">SerializerProvider</span> serializerProvider<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> phoneDesensitization <span class="token operator">=</span> <span class="token class-name">DesensitizedUtil</span><span class="token punctuation">.</span><span class="token function">idCardNum</span><span class="token punctuation">(</span>idCard<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        jsonGenerator<span class="token punctuation">.</span><span class="token function">writeString</span><span class="token punctuation">(</span>phoneDesensitization<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2）手机号序列化器。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 手机号脱敏反序列化
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PhoneDesensitizationSerializer</span> <span class="token keyword">extends</span> <span class="token class-name">JsonSerializer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token class-name">String</span> phone<span class="token punctuation">,</span> <span class="token class-name">JsonGenerator</span> jsonGenerator<span class="token punctuation">,</span> <span class="token class-name">SerializerProvider</span> serializerProvider<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> phoneDesensitization <span class="token operator">=</span> <span class="token class-name">DesensitizedUtil</span><span class="token punctuation">.</span><span class="token function">mobilePhone</span><span class="token punctuation">(</span>phone<span class="token punctuation">)</span><span class="token punctuation">;</span>
        jsonGenerator<span class="token punctuation">.</span><span class="token function">writeString</span><span class="token punctuation">(</span>phoneDesensitization<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3）敏感字段上自定义序列化器。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 用户返回参数
 */</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserRespDTO</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 证件号码
     */</span>
    <span class="token annotation punctuation">@JsonSerialize</span><span class="token punctuation">(</span>using <span class="token operator">=</span> <span class="token class-name">IdCardDesensitizationSerializer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> idCard<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 手机号
     */</span>
    <span class="token annotation punctuation">@JsonSerialize</span><span class="token punctuation">(</span>using <span class="token operator">=</span> <span class="token class-name">PhoneDesensitizationSerializer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> phone<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、用户注册" tabindex="-1"><a class="header-anchor" href="#三、用户注册" aria-hidden="true">#</a> 三、用户注册</h2><h3 id="_1、检查用户名是否存在" tabindex="-1"><a class="header-anchor" href="#_1、检查用户名是否存在" aria-hidden="true">#</a> 1、检查用户名是否存在</h3><p>直接查询数据库请求用户名是否存在。</p><p>流程图</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503101133395.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>存在什么问题？</p><ul><li>海量用户如果说查询的用户名存在或不存在，全部请求数据库，会将数据库直接打满。</li></ul><h3 id="_2、检查用户名是否存在引起的问题" tabindex="-1"><a class="header-anchor" href="#_2、检查用户名是否存在引起的问题" aria-hidden="true">#</a> 2、检查用户名是否存在引起的问题</h3><h4 id="_2-1、用户名加载缓存" tabindex="-1"><a class="header-anchor" href="#_2-1、用户名加载缓存" aria-hidden="true">#</a> 2.1、用户名加载缓存</h4><p>第一版解决方案，将数据库已有的用户名全部放到缓存里。</p><p>流程图：</p><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503101136673.png" style="zoom:50%;"><p>该方案问题：</p><ul><li>是否要设置数据的有效期？只能设置为无无有效期，也就是永久数据。</li><li>如果是永久不过期数据，占用 Redis 内存太高。</li></ul><h4 id="_2-2、布隆过滤器" tabindex="-1"><a class="header-anchor" href="#_2-2、布隆过滤器" aria-hidden="true">#</a> 2.2、布隆过滤器</h4><p>第二版解决方案，使用布隆过滤器。</p><p>流程图</p><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503101137589.png" style="zoom:50%;"><h4 id="_2-3、什么是布隆过滤器" tabindex="-1"><a class="header-anchor" href="#_2-3、什么是布隆过滤器" aria-hidden="true">#</a> 2.3、什么是布隆过滤器</h4><p>布隆过滤器是一种数据结构，用于快速判断一个元素是否存在于一个集合中。具体来说，布隆过滤器包含一个位数组和一</p><p>组哈希函数。位数组的初始值全部置为 0。在插入一个元素时，将该元素经过多个哈希函数映射到位数组上的多个位置，</p><p>并将这些位置的值置为 1。</p><p>1字节（Byte）=8位（Bit）</p><p>在查询一个元素是否存在时，会将该元素经过多个哈希函数映射到位数组上的多个位置，如果所有位置的值都为 1，则认</p><p>为元素存在；如果存在任一位置的值为 0，则认为元素不存在。</p><h5 id="优缺点" tabindex="-1"><a class="header-anchor" href="#优缺点" aria-hidden="true">#</a> 优缺点</h5><p>优点：</p><ul><li>高效地判断一个元素是否属于一个大规模集合。</li><li>节省内存。</li></ul><p>缺点：</p><ul><li>可能存在一定的误判。</li></ul><h5 id="布隆过滤器误判理解" tabindex="-1"><a class="header-anchor" href="#布隆过滤器误判理解" aria-hidden="true">#</a> 布隆过滤器误判理解</h5><ul><li>布隆过滤器要设置初始容量。容量设置越大，冲突几率越低。</li><li>布隆过滤器会设置预期的误判值。</li></ul><h5 id="布隆过滤器的误判是否能够接受" tabindex="-1"><a class="header-anchor" href="#布隆过滤器的误判是否能够接受" aria-hidden="true">#</a> 布隆过滤器的误判是否能够接受？</h5><p>答：可以容忍。为什么？因为用户名不是特别重要的数据，如果说我设置用户名为 aaa，系统返回我不可用，那我大可以在 aaa 的基础上再加一个a，也就是 aaaa。</p><h3 id="_3、代码中使用布隆过滤器" tabindex="-1"><a class="header-anchor" href="#_3、代码中使用布隆过滤器" aria-hidden="true">#</a> 3、代码中使用布隆过滤器</h3><h4 id="_3-1、引入-redisson-依赖" tabindex="-1"><a class="header-anchor" href="#_3-1、引入-redisson-依赖" aria-hidden="true">#</a> 3.1、引入 Redisson 依赖</h4><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.redisson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>redisson-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-2、配置-redis-参数" tabindex="-1"><a class="header-anchor" href="#_3-2、配置-redis-参数" aria-hidden="true">#</a> 3.2、配置 Redis 参数</h4><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">data</span><span class="token punctuation">:</span>
    <span class="token key atrule">redis</span><span class="token punctuation">:</span>
      <span class="token key atrule">host</span><span class="token punctuation">:</span> 127.0.0.1
      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">6379</span>
      <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token number">123456</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-3、创建布隆过滤器实例" tabindex="-1"><a class="header-anchor" href="#_3-3、创建布隆过滤器实例" aria-hidden="true">#</a> 3.3、创建布隆过滤器实例</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 布隆过滤器配置
 */</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RBloomFilterConfiguration</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 防止用户注册查询数据库的布隆过滤器
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">RBloomFilter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">userRegisterCachePenetrationBloomFilter</span><span class="token punctuation">(</span><span class="token class-name">RedissonClient</span> redissonClient<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">RBloomFilter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> cachePenetrationBloomFilter <span class="token operator">=</span> redissonClient<span class="token punctuation">.</span><span class="token function">getBloomFilter</span><span class="token punctuation">(</span><span class="token string">&quot;xxx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cachePenetrationBloomFilter<span class="token punctuation">.</span><span class="token function">tryInit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> cachePenetrationBloomFilter<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>tryInit 有两个核心参数：</p><ul><li><p>expectedInsertions：预估布隆过滤器存储的元素长度。</p></li><li><p>falseProbability：运行的误判率。</p></li></ul><p>错误率越低，位数组越长，布隆过滤器的内存占用越大。</p><p>错误率越低，散列 Hash 函数越多，计算耗时较长。</p><p>一个布隆过滤器占用大小的在线网站：</p><p>使用布隆过滤器的两种场景：</p><ul><li><p>初始使用：注册用户时就向容器中新增数据，就不需要任务向容器存储数据了。</p></li><li><p>使用过程中引入：读取数据源将目标数据刷到布隆过滤器。</p></li></ul><h4 id="_3-4、代码中使用" tabindex="-1"><a class="header-anchor" href="#_3-4、代码中使用" aria-hidden="true">#</a> 3.4、代码中使用</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">RBloomFilter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> userRegisterCachePenetrationBloomFilter<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="四、用户注册出现的一些问题" tabindex="-1"><a class="header-anchor" href="#四、用户注册出现的一些问题" aria-hidden="true">#</a> 四、用户注册出现的一些问题：</h2><p>现在的注册流程图是这样的：</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503101151714.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_1、如何防止用户名重复" tabindex="-1"><a class="header-anchor" href="#_1、如何防止用户名重复" aria-hidden="true">#</a> 1、如何防止用户名重复？</h3><p>通过布隆过滤器把所有用户名进行加载。这样该功能就能完全隔离数据库。</p><p>数据库层面添加唯一索引。</p><h3 id="_2、如何防止恶意请求毫秒级触发大量请求去一个未注册的用户名" tabindex="-1"><a class="header-anchor" href="#_2、如何防止恶意请求毫秒级触发大量请求去一个未注册的用户名" aria-hidden="true">#</a> 2、如何防止恶意请求毫秒级触发大量请求去一个未注册的用户名？</h3><p>因为用户名没注册，所以布隆过滤器不存在，代表着可以触发注册流程插入数据库。但是如果恶意请求短时间海量请求，</p><p>这些请求都会落到数据库，造成数据库访问压力。这里通过分布式锁，锁定用户名进行串行执行，防止恶意请求利用未注</p><p>册用户名将请求打到数据库。</p><p>流程执行图：</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503101151567.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3、如果恶意请求全部使用未注册用户名发起注册" tabindex="-1"><a class="header-anchor" href="#_3、如果恶意请求全部使用未注册用户名发起注册" aria-hidden="true">#</a> 3、如果恶意请求全部使用未注册用户名发起注册</h3><p>结论：系统无法进行完全风控，只有通过类似于限流的功能进行保障系统安全。</p>`,93),o=[p];function c(i,l){return s(),a("div",null,o)}const d=n(e,[["render",c],["__file","2.User Modules.html.vue"]]);export{d as default};
