const t=JSON.parse('{"key":"v-5e9bdbb7","path":"/fundamental/design_atterns/2.Singleton%20Pattern.html","title":"单例模式","lang":"zh-CN","frontmatter":{"order":1,"author":null,"title":"单例模式","category":["设计模式"],"description":"说到volatile的防止指令重排，那么volatile的内存屏障在哪里使用的最多，就是单例模式了。 那什么是单例模式，为什么需要单例模式？ 单例模式就是在一个时域，一个类只有一个对象；因为有的类的实例对象，创建和销毁对于资源来说消耗不大，比如String；有的类比较庞大和复杂，如果频繁的创建和销毁对象，并且这些对象完全是可以复用的，那么将会造成一些不...","head":[["meta",{"property":"og:url","content":"https://tim-qtp.github.io/blog/blog/fundamental/design_atterns/2.Singleton%20Pattern.html"}],["meta",{"property":"og:site_name","content":"Qtp"}],["meta",{"property":"og:title","content":"单例模式"}],["meta",{"property":"og:description","content":"说到volatile的防止指令重排，那么volatile的内存屏障在哪里使用的最多，就是单例模式了。 那什么是单例模式，为什么需要单例模式？ 单例模式就是在一个时域，一个类只有一个对象；因为有的类的实例对象，创建和销毁对于资源来说消耗不大，比如String；有的类比较庞大和复杂，如果频繁的创建和销毁对象，并且这些对象完全是可以复用的，那么将会造成一些不..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-12T01:17:00.000Z"}],["meta",{"property":"article:author","content":"tim-qtp"}],["meta",{"property":"article:modified_time","content":"2025-03-12T01:17:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"单例模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-12T01:17:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"tim-qtp\\",\\"url\\":\\"https://github.com/tim-qtp/\\"}]}"]]},"headers":[],"git":{"createdTime":1741742220000,"updatedTime":1741742220000,"contributors":[{"name":"tim-qtp","email":"2469100031@qq.com","commits":1}]},"readingTime":{"minutes":11.62,"words":3485},"filePathRelative":"fundamental/design_atterns/2.Singleton Pattern.md","localizedDate":"2025年3月12日","autoDesc":true,"excerpt":""}');export{t as data};
