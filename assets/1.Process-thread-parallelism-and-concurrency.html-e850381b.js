const l=JSON.parse('{"key":"v-cb8f29de","path":"/Java/concurrent/1.Process-thread-parallelism-and-concurrency.html","title":"狂神JUC并发","lang":"zh-CN","frontmatter":{"order":2,"author":null,"title":"狂神JUC并发","category":["多线程"],"description":"开始之前：进程和线程的区别？ 进程是操作系统进行资源分配和调度的基本单位，是一个程序的运行实例，拥有独立的内存空间。 一个进程可以包含多个线程，是CPU调度和执行的最小单位，可以共享属于同一进程的资源。简而言之，进程间相互独立，而线程间可以共享内存和资源。 准备工作 新建一个Maven项目，引入一个lombok依赖. 1\\\\. 什么是JUC JUC就是j...","head":[["meta",{"property":"og:url","content":"https://tim-qtp.github.io/blog/blog/Java/concurrent/1.Process-thread-parallelism-and-concurrency.html"}],["meta",{"property":"og:site_name","content":"Qtp"}],["meta",{"property":"og:title","content":"狂神JUC并发"}],["meta",{"property":"og:description","content":"开始之前：进程和线程的区别？ 进程是操作系统进行资源分配和调度的基本单位，是一个程序的运行实例，拥有独立的内存空间。 一个进程可以包含多个线程，是CPU调度和执行的最小单位，可以共享属于同一进程的资源。简而言之，进程间相互独立，而线程间可以共享内存和资源。 准备工作 新建一个Maven项目，引入一个lombok依赖. 1\\\\. 什么是JUC JUC就是j..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-18T07:23:14.000Z"}],["meta",{"property":"article:author","content":"tim-qtp"}],["meta",{"property":"article:modified_time","content":"2025-03-18T07:23:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"狂神JUC并发\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-18T07:23:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"tim-qtp\\",\\"url\\":\\"https://github.com/tim-qtp/\\"}]}"]]},"headers":[{"level":2,"title":"开始之前：进程和线程的区别？","slug":"开始之前-进程和线程的区别","link":"#开始之前-进程和线程的区别","children":[]},{"level":2,"title":"准备工作","slug":"准备工作","link":"#准备工作","children":[]},{"level":2,"title":"1. 什么是JUC","slug":"_1-什么是juc","link":"#_1-什么是juc","children":[{"level":3,"title":"1.1 进程","slug":"_1-1-进程","link":"#_1-1-进程","children":[]},{"level":3,"title":"1.2 线程","slug":"_1-2-线程","link":"#_1-2-线程","children":[]},{"level":3,"title":"1.3 并发","slug":"_1-3-并发","link":"#_1-3-并发","children":[]},{"level":3,"title":"1.4 并行","slug":"_1-4-并行","link":"#_1-4-并行","children":[]},{"level":3,"title":"1.5 线程的状态","slug":"_1-5-线程的状态","link":"#_1-5-线程的状态","children":[]},{"level":3,"title":"1.7 线程run/start的区别","slug":"_1-7-线程run-start的区别","link":"#_1-7-线程run-start的区别","children":[]},{"level":3,"title":"1.7 wait/sleep的区别","slug":"_1-7-wait-sleep的区别","link":"#_1-7-wait-sleep的区别","children":[]}]},{"level":2,"title":"2.Lock","slug":"_2-lock","link":"#_2-lock","children":[{"level":3,"title":"2.1 传统的 synchronized","slug":"_2-1-传统的-synchronized","link":"#_2-1-传统的-synchronized","children":[]},{"level":3,"title":"2.2   Lock","slug":"_2-2-lock","link":"#_2-2-lock","children":[]},{"level":3,"title":"2.3 Synchronized 与Lock 的区别","slug":"_2-3-synchronized-与lock-的区别","link":"#_2-3-synchronized-与lock-的区别","children":[]},{"level":3,"title":"2.4 生产者和消费者的关系","slug":"_2-4-生产者和消费者的关系","link":"#_2-4-生产者和消费者的关系","children":[]},{"level":3,"title":"2.5 8锁现象","slug":"_2-5-8锁现象","link":"#_2-5-8锁现象","children":[]}]},{"level":2,"title":"3. 集合不安全","slug":"_3-集合不安全","link":"#_3-集合不安全","children":[{"level":3,"title":"3.1 List 不安全","slug":"_3-1-list-不安全","link":"#_3-1-list-不安全","children":[]},{"level":3,"title":"3.1 set 不安全","slug":"_3-1-set-不安全","link":"#_3-1-set-不安全","children":[]},{"level":3,"title":"3.3 Map不安全","slug":"_3-3-map不安全","link":"#_3-3-map不安全","children":[]}]},{"level":2,"title":"4. Callable","slug":"_4-callable","link":"#_4-callable","children":[]},{"level":2,"title":"5. 常用的辅助类","slug":"_5-常用的辅助类","link":"#_5-常用的辅助类","children":[{"level":3,"title":"1）CountDownLatch","slug":"_1-countdownlatch","link":"#_1-countdownlatch","children":[]},{"level":3,"title":"2）CyclickBarrier","slug":"_2-cyclickbarrier","link":"#_2-cyclickbarrier","children":[]},{"level":3,"title":"3）Semaphore","slug":"_3-semaphore","link":"#_3-semaphore","children":[]}]},{"level":2,"title":"6. 读写锁","slug":"_6-读写锁","link":"#_6-读写锁","children":[]},{"level":2,"title":"7. 阻塞队列","slug":"_7-阻塞队列","link":"#_7-阻塞队列","children":[{"level":3,"title":"1）BlockQueue","slug":"_1-blockqueue","link":"#_1-blockqueue","children":[]},{"level":3,"title":"2）同步队列(SynchronousQueue)","slug":"_2-同步队列-synchronousqueue","link":"#_2-同步队列-synchronousqueue","children":[]},{"level":3,"title":"3）手写一个阻塞队列","slug":"_3-手写一个阻塞队列","link":"#_3-手写一个阻塞队列","children":[]}]},{"level":2,"title":"8. 线程池(重要)","slug":"_8-线程池-重要","link":"#_8-线程池-重要","children":[{"level":3,"title":"1）线程池的好处：","slug":"_1-线程池的好处","link":"#_1-线程池的好处","children":[]},{"level":3,"title":"2）线程池：三大方法","slug":"_2-线程池-三大方法","link":"#_2-线程池-三大方法","children":[]},{"level":3,"title":"3）七大参数","slug":"_3-七大参数","link":"#_3-七大参数","children":[]},{"level":3,"title":"4）四种拒绝策略","slug":"_4-四种拒绝策略","link":"#_4-四种拒绝策略","children":[]},{"level":3,"title":"5）如何设置线程池的大小","slug":"_5-如何设置线程池的大小","link":"#_5-如何设置线程池的大小","children":[]}]},{"level":2,"title":"9. 四大函数式接口","slug":"_9-四大函数式接口","link":"#_9-四大函数式接口","children":[{"level":3,"title":"1）Function 函数型接口","slug":"_1-function-函数型接口","link":"#_1-function-函数型接口","children":[]},{"level":3,"title":"2）Predicate 断定型接口","slug":"_2-predicate-断定型接口","link":"#_2-predicate-断定型接口","children":[]},{"level":3,"title":"3）Suppier 供给型接口","slug":"_3-suppier-供给型接口","link":"#_3-suppier-供给型接口","children":[]},{"level":3,"title":"4）Consummer 消费型接口","slug":"_4-consummer-消费型接口","link":"#_4-consummer-消费型接口","children":[]}]},{"level":2,"title":"10. Stream 流式计算","slug":"_10-stream-流式计算","link":"#_10-stream-流式计算","children":[]},{"level":2,"title":"11. ForkJoin（分支合并）","slug":"_11-forkjoin-分支合并","link":"#_11-forkjoin-分支合并","children":[{"level":3,"title":"1）ForkJoin 特点： 工作窃取！","slug":"_1-forkjoin-特点-工作窃取","link":"#_1-forkjoin-特点-工作窃取","children":[]},{"level":3,"title":"2）如何使用ForkJoin?","slug":"_2-如何使用forkjoin","link":"#_2-如何使用forkjoin","children":[]}]},{"level":2,"title":"12. 异步回调","slug":"_12-异步回调","link":"#_12-异步回调","children":[{"level":3,"title":"（1）没有返回值的runAsync异步回调","slug":"_1-没有返回值的runasync异步回调","link":"#_1-没有返回值的runasync异步回调","children":[]},{"level":3,"title":"（2）有返回值的异步回调supplyAsync","slug":"_2-有返回值的异步回调supplyasync","link":"#_2-有返回值的异步回调supplyasync","children":[]}]},{"level":2,"title":"13. JMM","slug":"_13-jmm","link":"#_13-jmm","children":[{"level":3,"title":"1）对Volatile 的理解","slug":"_1-对volatile-的理解","link":"#_1-对volatile-的理解","children":[]},{"level":3,"title":"2）什么是JMM？","slug":"_2-什么是jmm","link":"#_2-什么是jmm","children":[]}]},{"level":2,"title":"14 volatile","slug":"_14-volatile","link":"#_14-volatile","children":[{"level":3,"title":"1）保证可见性","slug":"_1-保证可见性","link":"#_1-保证可见性","children":[]},{"level":3,"title":"2）不保证原子性","slug":"_2-不保证原子性","link":"#_2-不保证原子性","children":[]},{"level":3,"title":"3）禁止指令重排","slug":"_3-禁止指令重排","link":"#_3-禁止指令重排","children":[]},{"level":3,"title":"4）总结","slug":"_4-总结","link":"#_4-总结","children":[]},{"level":3,"title":"15. 玩转单例模式","slug":"_15-玩转单例模式","link":"#_15-玩转单例模式","children":[]},{"level":3,"title":"1）饿汉式","slug":"_1-饿汉式","link":"#_1-饿汉式","children":[]},{"level":3,"title":"2）DCL懒汉式","slug":"_2-dcl懒汉式","link":"#_2-dcl懒汉式","children":[]},{"level":3,"title":"3）静态内部类","slug":"_3-静态内部类","link":"#_3-静态内部类","children":[]},{"level":3,"title":"4）枚举","slug":"_4-枚举","link":"#_4-枚举","children":[]}]},{"level":2,"title":"15. 理解CAS","slug":"_15-理解cas","link":"#_15-理解cas","children":[{"level":3,"title":"1）什么是CAS？","slug":"_1-什么是cas","link":"#_1-什么是cas","children":[]},{"level":3,"title":"举例说明","slug":"举例说明","link":"#举例说明","children":[]}]},{"level":2,"title":"16.原子引用解决ABA问题","slug":"_16-原子引用解决aba问题","link":"#_16-原子引用解决aba问题","children":[]},{"level":2,"title":"17. 各种锁的理解","slug":"_17-各种锁的理解","link":"#_17-各种锁的理解","children":[{"level":3,"title":"1）公平锁，非公平锁","slug":"_1-公平锁-非公平锁","link":"#_1-公平锁-非公平锁","children":[]},{"level":3,"title":"2）可重入锁","slug":"_2-可重入锁","link":"#_2-可重入锁","children":[]},{"level":3,"title":"3）自旋锁","slug":"_3-自旋锁","link":"#_3-自旋锁","children":[]},{"level":3,"title":"4）死锁","slug":"_4-死锁","link":"#_4-死锁","children":[]}]}],"git":{"createdTime":1741218214000,"updatedTime":1742282594000,"contributors":[{"name":"tim-qtp","email":"2469100031@qq.com","commits":3}]},"readingTime":{"minutes":60.16,"words":18048},"filePathRelative":"Java/concurrent/1.Process-thread-parallelism-and-concurrency.md","localizedDate":"2025年3月5日","autoDesc":true,"excerpt":""}');export{l as data};
