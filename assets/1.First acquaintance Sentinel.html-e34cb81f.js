import{_ as i,W as l,X as r,$ as n,a0 as t,Z as e,a2 as s,C as o}from"./framework-6a3aa88c.js";const p={},d=s('<h2 id="_1-雪崩问题及解决方案" tabindex="-1"><a class="header-anchor" href="#_1-雪崩问题及解决方案" aria-hidden="true">#</a> 1.雪崩问题及解决方案</h2><h3 id="_1-1-雪崩问题" tabindex="-1"><a class="header-anchor" href="#_1-1-雪崩问题" aria-hidden="true">#</a> 1.1.雪崩问题</h3><p>微服务中，服务间调用关系错综复杂，一个微服务往往依赖于多个其它微服务。</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503121130343.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如图，如果服务提供者I发生了故障，当前的应用的部分业务因为依赖于服务I，因此也会被阻塞。此时，其它不依赖于服务I的业务似乎不受影响。</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503121130332.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>但是，依赖服务I的业务请求被阻塞，用户不会得到响应，则tomcat的这个线程不会释放，于是越来越多的用户请求到来，越来越多的线程会阻塞：</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503121130348.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>服务器支持的线程和并发数有限，请求一直阻塞，会导致服务器资源耗尽，从而导致所有其它服务都不可用，那么当前服务也就不可用了。</p><p>那么，依赖于当前服务的其它服务随着时间的推移，最终也都会变的不可用，形成级联失败，雪崩就发生了：</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503121130341.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="解决雪崩问题的常见方式有四种" tabindex="-1"><a class="header-anchor" href="#解决雪崩问题的常见方式有四种" aria-hidden="true">#</a> 解决雪崩问题的常见方式有四种：</h3><ul><li><p>超时处理：设定超时时间，请求超过一定时间没有响应就返回错误信息，不会无休止等待</p></li><li><p>仓壁模式：仓壁模式来源于船舱的设计，限定每个业务能使用的线程数，避免耗尽整个tomcat的资源，因此也叫线程隔离。</p></li></ul><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503121130336.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><p>断路器模式：由<strong>断路器</strong>统计业务执行的异常比例，如果超出阈值则会<strong>熔断</strong>该业务，拦截访问该业务的一切请求。</p></li><li><p>流量控制：限制业务访问的QPS，避免服务因流量的突增而故障。</p></li></ul><p>总结：</p><p><strong>限流</strong>是对服务的保护，避免因瞬间高并发流量而导致服务故障，进而避免雪崩。是一种<strong>预防</strong>措施。</p><p><strong>超时处理、线程隔离、降级熔断</strong>是在部分服务故障时，将故障控制在一定范围，避免雪崩。是一种<strong>补救</strong>措施。</p><h2 id="_2-服务保护技术对比" tabindex="-1"><a class="header-anchor" href="#_2-服务保护技术对比" aria-hidden="true">#</a> 2.服务保护技术对比</h2><p>在SpringCloud当中支持多种服务保护技术：</p>',20),c={href:"https://github.com/Netflix/Hystrix",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/alibaba/Sentinel",target:"_blank",rel:"noopener noreferrer"},u={href:"https://github.com/resilience4j/resilience4j",target:"_blank",rel:"noopener noreferrer"},h=s('<p>早期比较流行的是Hystrix框架，但目前国内实用最广泛的还是阿里巴巴的Sentinel框架，这里做下对比，瞎看一下就行：</p><table><thead><tr><th></th><th><strong>Sentinel</strong></th><th><strong>Hystrix</strong></th></tr></thead><tbody><tr><td>隔离策略</td><td>信号量隔离</td><td>线程池隔离/信号量隔离</td></tr><tr><td>熔断降级策略</td><td>基于慢调用比例或异常比例</td><td>基于失败比率</td></tr><tr><td>实时指标实现</td><td>滑动窗口</td><td>滑动窗口（基于 RxJava）</td></tr><tr><td>规则配置</td><td>支持多种数据源</td><td>支持多种数据源</td></tr><tr><td>扩展性</td><td>多个扩展点</td><td>插件的形式</td></tr><tr><td>基于注解的支持</td><td>支持</td><td>支持</td></tr><tr><td>限流</td><td>基于 QPS，支持基于调用关系的限流</td><td>有限的支持</td></tr><tr><td>流量整形</td><td>支持慢启动、匀速排队模式</td><td>不支持</td></tr><tr><td>系统自适应保护</td><td>支持</td><td>不支持</td></tr><tr><td>控制台</td><td>开箱即用，可配置规则、查看秒级监控、机器发现等</td><td>不完善</td></tr><tr><td>常见框架的适配</td><td>Servlet、Spring Cloud、Dubbo、gRPC 等</td><td>Servlet、Spring Cloud Netflix</td></tr></tbody></table><h2 id="_3-sentinel介绍和安装" tabindex="-1"><a class="header-anchor" href="#_3-sentinel介绍和安装" aria-hidden="true">#</a> 3.Sentinel介绍和安装</h2><h3 id="_3-1-初识sentinel" tabindex="-1"><a class="header-anchor" href="#_3-1-初识sentinel" aria-hidden="true">#</a> 3.1.初识Sentinel</h3>',4),b={href:"https://sentinelguard.io/zh-cn/index.html",target:"_blank",rel:"noopener noreferrer"},m=s('<p>Sentinel 具有以下特征:</p><ul><li><p><strong>丰富的应用场景</strong>：Sentinel 承接了阿里巴巴近 10 年的双十一大促流量的核心场景，例如秒杀（即突发流量控制在系统容量可以承受的范围）、消息削峰填谷、集群流量控制、实时熔断下游不可用应用等。</p></li><li><p><strong>完备的实时监控</strong>：Sentinel 同时提供实时的监控功能。您可以在控制台中看到接入应用的单台机器秒级数据，甚至 500 台以下规模的集群的汇总运行情况。</p></li><li><p><strong>广泛的开源生态</strong>：Sentinel 提供开箱即用的与其它开源框架/库的整合模块，例如与 Spring Cloud、Dubbo、gRPC 的整合。您只需要引入相应的依赖并进行简单的配置即可快速地接入 Sentinel。</p></li><li><p><strong>完善的</strong> <strong>SPI</strong> <strong>扩展点</strong>：Sentinel 提供简单易用、完善的 SPI 扩展接口。您可以通过实现扩展接口来快速地定制逻辑。例如定制规则管理、适配动态数据源等。</p></li></ul><h3 id="_3-2-安装sentinel" tabindex="-1"><a class="header-anchor" href="#_3-2-安装sentinel" aria-hidden="true">#</a> 3.2.安装Sentinel</h3><p>1）下载</p>',4),f={href:"https://github.com/alibaba/Sentinel/releases",target:"_blank",rel:"noopener noreferrer"},k=s(`<p>下载好的jar包：</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503121130037.png" alt="image-20210715174252531" tabindex="0" loading="lazy"><figcaption>image-20210715174252531</figcaption></figure><p>2）运行</p><p>将jar包放到任意非中文目录，执行命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">java</span> <span class="token parameter variable">-jar</span> sentinel-dashboard-1.8.1.jar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果要修改Sentinel的默认端口、账户、密码，可以通过下列配置：</p><table><thead><tr><th><strong>配置项</strong></th><th><strong>默认值</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>server.port</td><td>8080</td><td>服务端口</td></tr><tr><td>sentinel.dashboard.auth.username</td><td>sentinel</td><td>默认用户名</td></tr><tr><td>sentinel.dashboard.auth.password</td><td>sentinel</td><td>默认密码</td></tr></tbody></table><p>例如，修改端口：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">java</span> <span class="token parameter variable">-Dserver.port</span><span class="token operator">=</span><span class="token number">8090</span> <span class="token parameter variable">-jar</span> sentinel-dashboard-1.8.1.jar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>3）访问</p><p>访问http://localhost:8080页面，就可以看到sentinel的控制台了：</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503121130075.png" alt="image-20210715190827846" tabindex="0" loading="lazy"><figcaption>image-20210715190827846</figcaption></figure><p>需要输入账号和密码，默认都是：sentinel</p><p>登录后，发现一片空白，什么都没有：</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503121130477.png" alt="image-20210715191134448" tabindex="0" loading="lazy"><figcaption>image-20210715191134448</figcaption></figure><p>这是因为我们还没有与微服务整合。</p><h2 id="_4-微服务整合sentinel" tabindex="-1"><a class="header-anchor" href="#_4-微服务整合sentinel" aria-hidden="true">#</a> 4.微服务整合Sentinel</h2><p>我们在order-service中整合sentinel，并连接sentinel的控制台，步骤如下：</p><p>1）引入sentinel依赖</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!--sentinel--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span> 
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-sentinel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2）配置控制台</p><p>修改application.yaml文件，添加下面内容：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8088</span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span> 
    <span class="token key atrule">sentinel</span><span class="token punctuation">:</span>
      <span class="token key atrule">transport</span><span class="token punctuation">:</span>
        <span class="token key atrule">dashboard</span><span class="token punctuation">:</span> localhost<span class="token punctuation">:</span><span class="token number">8080</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3）访问order-service的任意端点</p>`,24),_={href:"http://localhost:8088/order/101%EF%BC%8C%E8%BF%99%E6%A0%B7%E6%89%8D%E8%83%BD%E8%A7%A6%E5%8F%91sentinel%E7%9A%84%E7%9B%91%E6%8E%A7%E3%80%82",target:"_blank",rel:"noopener noreferrer"},v=n("p",null,"然后再访问sentinel的控制台，查看效果：",-1),x=n("figure",null,[n("img",{src:"https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503121130515.png",alt:"image-20210715191241799",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20210715191241799")],-1);function y(S,q){const a=o("ExternalLinkIcon");return l(),r("div",null,[d,n("ul",null,[n("li",null,[n("a",c,[t("Netfix Hystrix"),e(a)])]),n("li",null,[n("a",g,[t("Sentinel"),e(a)])]),n("li",null,[n("a",u,[t("Resilience4J"),e(a)])])]),h,n("p",null,[t("Sentinel是阿里巴巴开源的一款微服务流量控制组件。官网地址："),n("a",b,[t("https://sentinelguard.io/zh-cn/index.html"),e(a)])]),m,n("p",null,[t("sentinel官方提供了UI控制台，方便我们对系统做限流设置。可以在"),n("a",f,[t("GitHub"),e(a)]),t("下载。")]),k,n("p",null,[t("打开浏览器，访问"),n("a",_,[t("http://localhost:8088/order/101，这样才能触发sentinel的监控。"),e(a)])]),v,x])}const I=i(p,[["render",y],["__file","1.First acquaintance Sentinel.html.vue"]]);export{I as default};
