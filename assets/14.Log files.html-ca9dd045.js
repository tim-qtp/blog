import{_ as o,W as t,X as r,a2 as e}from"./framework-48328e23.js";const n={},p=e("<p>MySQL 的日志文件主要包括：</p><p>①、<strong>错误日志</strong>（Error Log）：记录 MySQL 服务器启动、运行或停止时出现的问题。</p><blockquote><p>你启动 MySQL 时失败了，错误日志会告诉你是因为配置文件写错了，还是端口被占用了</p></blockquote><p>②、<strong>慢查询日志</strong>（Slow Query Log）：记录执行时间超过 long_query_time 值的所有 SQL 语句。这个时间值是可配置的，默认情况下，慢查询日志功能是关闭的。可以用来识别和优化慢 SQL。</p><blockquote><p>比如加个索引</p></blockquote><p>③、<strong>一般查询日志</strong>（General Query Log）：记录所有 MySQL 服务器的连接信息及所有的 SQL 语句，不论这些语句是否修改了数据。</p><p>④、<strong>二进制日志</strong>（Binary Log）：通过追加的方式，记录了所有修改数据库状态的 SQL 语句（<mark>DDL和DML</mark>），以及每个语句的执行时间，如 INSERT、UPDATE、DELETE 等，但不包括 SELECT 和 SHOW 这类的操作。binlog 记录的是 <strong>逻辑日志</strong>（SQL 语句），而不是具体的数据块或页面修改。</p><blockquote><p>如果有一天数据库坏了，你可以用这个日志把数据恢复到坏之前的状态；</p><p>主从复制也是靠这个日志，主库把日志发给从库，从库照着日志改数据。</p></blockquote><p>⑤、<strong>重做日志</strong>（Redo Log）：记录了对于 InnoDB 表的每个写操作，不是 SQL 级别的，而是物理级别的，主要用于崩溃恢复。</p><blockquote><p>直接把数据写入磁盘很慢，因为磁盘 I/O 性能差。</p><p>为了提高性能，InnoDB 先把修改记录写入 <strong>redo log（顺序写入）</strong>，然后再把数据慢慢刷入磁盘（异步写入）。</p><p>如果在刷入磁盘之前崩溃，重启时 InnoDB 通过 redo log 恢复未完成的数据修改。</p><p>因为 redo log 是<strong>物理日志</strong>，记录“某页（Page）某位置的数据被修改为某值”</p></blockquote><p>⑥、<strong>回滚日志</strong>（Undo Log，或者叫事务日志）：记录数据被修改前的值，用于事务的回滚。</p>",11),s=[p];function g(l,c){return t(),r("div",null,s)}const _=o(n,[["render",g],["__file","14.Log files.html.vue"]]);export{_ as default};
