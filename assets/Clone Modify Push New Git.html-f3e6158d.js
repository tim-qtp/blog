import{_ as e,W as a,X as n,a1 as i}from"./framework-4e10303a.js";const s={},t=i(`<h2 id="🍂-intellij-idea修改git-origin" tabindex="-1"><a class="header-anchor" href="#🍂-intellij-idea修改git-origin" aria-hidden="true">#</a> 🍂 IntelliJ IDEA修改git origin</h2><p>1、进入项目终端或者idea的Terminal查看代码已绑定的git仓库地址</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> remote <span class="token parameter variable">-v</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2、删除本地关联的git仓库地址</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> remote <span class="token function">rm</span> origin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>3、本地代码关联新的仓库地址</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> remote <span class="token function">add</span> origin 新地址
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>4、再次查看本地代码关联的git仓库地址是否正确</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> remote <span class="token parameter variable">-v</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>5、确认无误后即可再次提交和推送代码</p><p>或者直接用IDEA Git工具：</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/image-20250102123024413.png" alt="Manage Remotes" tabindex="0" loading="lazy"><figcaption>Manage Remotes</figcaption></figure>`,12),d=[t];function l(r,o){return a(),n("div",null,d)}const p=e(s,[["render",l],["__file","Clone Modify Push New Git.html.vue"]]);export{p as default};
