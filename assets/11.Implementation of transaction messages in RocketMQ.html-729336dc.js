const t=JSON.parse('{"key":"v-1a0297c6","path":"/microservices/rocketmq/11.Implementation%20of%20transaction%20messages%20in%20RocketMQ.html","title":"RocketMQ中关于事务消息的实现","lang":"zh-CN","frontmatter":{"order":11,"author":null,"title":"RocketMQ中关于事务消息的实现","category":["Rocketmq","框架"],"description":"场景描述： 用户在电商平台下单购买商品，订单系统需要记录订单信息，同时积分系统需要为用户增加相应的积分。为确保这两个操作的一致性，我们引入 RocketMQ 的事务消息机制。 实现步骤： 1. 发送半事务消息： 订单系统在接收到用户下单请求后，首先向 RocketMQ 发送一条半事务消息，表示即将执行订单创建和积分增加的操作。此时，这条消息对消费者（积...","head":[["meta",{"property":"og:url","content":"https://tim-qtp.github.io/blog/blog/microservices/rocketmq/11.Implementation%20of%20transaction%20messages%20in%20RocketMQ.html"}],["meta",{"property":"og:site_name","content":"Qtp"}],["meta",{"property":"og:title","content":"RocketMQ中关于事务消息的实现"}],["meta",{"property":"og:description","content":"场景描述： 用户在电商平台下单购买商品，订单系统需要记录订单信息，同时积分系统需要为用户增加相应的积分。为确保这两个操作的一致性，我们引入 RocketMQ 的事务消息机制。 实现步骤： 1. 发送半事务消息： 订单系统在接收到用户下单请求后，首先向 RocketMQ 发送一条半事务消息，表示即将执行订单创建和积分增加的操作。此时，这条消息对消费者（积..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-18T07:23:14.000Z"}],["meta",{"property":"article:author","content":"tim-qtp"}],["meta",{"property":"article:modified_time","content":"2025-03-18T07:23:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"RocketMQ中关于事务消息的实现\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-18T07:23:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"tim-qtp\\",\\"url\\":\\"https://github.com/tim-qtp/\\"}]}"]]},"headers":[],"git":{"createdTime":1742282594000,"updatedTime":1742282594000,"contributors":[{"name":"tim-qtp","email":"2469100031@qq.com","commits":1}]},"readingTime":{"minutes":1.87,"words":561},"filePathRelative":"microservices/rocketmq/11.Implementation of transaction messages in RocketMQ.md","localizedDate":"2025年3月18日","autoDesc":true,"excerpt":""}');export{t as data};
