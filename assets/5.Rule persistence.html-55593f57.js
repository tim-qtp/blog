import{_ as a,W as n,X as s,a2 as e}from"./framework-6a3aa88c.js";const t={},i=e(`<h2 id="规则持久化" tabindex="-1"><a class="header-anchor" href="#规则持久化" aria-hidden="true">#</a> 规则持久化</h2><p>现在，sentinel的所有规则都是内存存储，重启后所有规则都会丢失。在生产环境下，我们必须确保这些规则的持久化，避免丢失。</p><h2 id="_1-规则管理模式" tabindex="-1"><a class="header-anchor" href="#_1-规则管理模式" aria-hidden="true">#</a> 1.规则管理模式</h2><p>规则是否能持久化，取决于规则管理模式，sentinel支持三种规则管理模式：</p><ul><li>原始模式：Sentinel的默认模式，将规则保存在内存，重启服务会丢失。</li><li>pull模式</li><li>push模式</li></ul><h3 id="_1-1-pull模式" tabindex="-1"><a class="header-anchor" href="#_1-1-pull模式" aria-hidden="true">#</a> 1.1.pull模式</h3><p>pull模式：控制台将配置的规则推送到Sentinel客户端，而客户端会将配置规则保存在本地文件或数据库中。以后会定时去本地文件或数据库中查询，更新本地规则。</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503122006941.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_1-2-push模式" tabindex="-1"><a class="header-anchor" href="#_1-2-push模式" aria-hidden="true">#</a> 1.2.push模式</h3><p>push模式：控制台将配置规则推送到远程配置中心，例如Nacos。Sentinel客户端监听Nacos，获取配置变更的推送消息，完成本地配置更新。</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503122006943.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>总结：</p><p>Sentinel的三种配置管理模式是什么？</p><ul><li>原始模式：保存在内存</li><li>pu模式：保存在本地文件或数据库，定时去读取</li><li>push模式：保存在nacos,监听变更实时更新</li></ul><h2 id="_2-实现push模式" tabindex="-1"><a class="header-anchor" href="#_2-实现push模式" aria-hidden="true">#</a> 2.实现push模式</h2><h3 id="_2-1-修改order-service服务" tabindex="-1"><a class="header-anchor" href="#_2-1-修改order-service服务" aria-hidden="true">#</a> 2.1.修改order-service服务</h3><p>修改OrderService，让其监听Nacos中的sentinel规则配置。</p><p>具体步骤如下：</p><h3 id="_2-2-引入依赖" tabindex="-1"><a class="header-anchor" href="#_2-2-引入依赖" aria-hidden="true">#</a> 2.2.引入依赖</h3><p>在order-service中引入sentinel监听nacos的依赖：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.csp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>sentinel-datasource-nacos<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-配置nacos地址" tabindex="-1"><a class="header-anchor" href="#_2-3-配置nacos地址" aria-hidden="true">#</a> 2.3.配置nacos地址</h3><p>在order-service中的application.yml文件配置nacos地址及监听的配置信息：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">sentinel</span><span class="token punctuation">:</span>
      <span class="token key atrule">datasource</span><span class="token punctuation">:</span>
        <span class="token key atrule">flow</span><span class="token punctuation">:</span>
          <span class="token key atrule">nacos</span><span class="token punctuation">:</span>
            <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> localhost<span class="token punctuation">:</span><span class="token number">8848</span> <span class="token comment"># nacos地址</span>
            <span class="token key atrule">dataId</span><span class="token punctuation">:</span> orderservice<span class="token punctuation">-</span>flow<span class="token punctuation">-</span>rules
            <span class="token key atrule">groupId</span><span class="token punctuation">:</span> SENTINEL_GROUP
            <span class="token key atrule">rule-type</span><span class="token punctuation">:</span> flow <span class="token comment"># 还可以是：degrade、authority、param-flow</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3、修改sentinel-dashboard源码" tabindex="-1"><a class="header-anchor" href="#_3、修改sentinel-dashboard源码" aria-hidden="true">#</a> 3、修改sentinel-dashboard源码</h2><p>SentinelDashboard默认不支持nacos的持久化，需要修改源码。</p><h3 id="_3-1-解压" tabindex="-1"><a class="header-anchor" href="#_3-1-解压" aria-hidden="true">#</a> 3.1. 解压</h3><p>解压sentinel源码包：</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503122240798.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然后并用IDEA打开这个项目，结构如下：</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503122240579.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-2-修改nacos依赖" tabindex="-1"><a class="header-anchor" href="#_3-2-修改nacos依赖" aria-hidden="true">#</a> 3.2. 修改nacos依赖</h3><p>在sentinel-dashboard源码的pom文件中，nacos的依赖默认的scope是test，只能在测试时使用，这里要去除：</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503122240297.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>将sentinel-datasource-nacos依赖的scope去掉：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.csp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>sentinel-datasource-nacos<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-添加nacos支持" tabindex="-1"><a class="header-anchor" href="#_3-3-添加nacos支持" aria-hidden="true">#</a> 3.3. 添加nacos支持</h3><p>在sentinel-dashboard的test包下，已经编写了对nacos的支持，我们需要将其拷贝到main下。</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503122240085.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-4-修改nacos地址" tabindex="-1"><a class="header-anchor" href="#_3-4-修改nacos地址" aria-hidden="true">#</a> 3.4. 修改nacos地址</h3><p>然后，还需要修改测试代码中的NacosConfig类：</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503122240671.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>修改其中的nacos地址，让其读取application.properties中的配置：</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503122240770.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在sentinel-dashboard的application.properties中添加nacos地址配置：</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">nacos.addr</span><span class="token punctuation">=</span><span class="token value attr-value">localhost:8848</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-5-配置nacos数据源" tabindex="-1"><a class="header-anchor" href="#_3-5-配置nacos数据源" aria-hidden="true">#</a> 3.5. 配置nacos数据源</h3><p>另外，还需要修改com.alibaba.csp.sentinel.dashboard.controller.v2包下的FlowControllerV2类：</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503122240955.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>让我们添加的Nacos数据源生效：</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503122241757.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-6-修改前端页面" tabindex="-1"><a class="header-anchor" href="#_3-6-修改前端页面" aria-hidden="true">#</a> 3.6. 修改前端页面</h3><p>接下来，还要修改前端页面，添加一个支持nacos的菜单。</p><p>修改src/main/webapp/resources/app/scripts/directives/sidebar/目录下的sidebar.html文件：</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503122241688.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>将其中的这部分注释打开：</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503122241004.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>修改其中的文本：</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503122241145.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-7-重新编译、打包项目" tabindex="-1"><a class="header-anchor" href="#_3-7-重新编译、打包项目" aria-hidden="true">#</a> 3.7. 重新编译、打包项目</h3><p>运行IDEA中的maven插件，编译和打包修改好的Sentinel-Dashboard：</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503122241499.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-8-启动" tabindex="-1"><a class="header-anchor" href="#_3-8-启动" aria-hidden="true">#</a> 3.8.启动</h3><p>启动方式跟官方一样：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">java</span> <span class="token parameter variable">-jar</span> sentinel-dashboard.jar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果要修改nacos地址，需要添加参数：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">java</span> <span class="token parameter variable">-jar</span> <span class="token parameter variable">-Dnacos.addr</span><span class="token operator">=</span>localhost:8848 sentinel-dashboard.jar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-9-最终测试" tabindex="-1"><a class="header-anchor" href="#_3-9-最终测试" aria-hidden="true">#</a> 3.9.最终测试</h3><p>你会发现多了一条NACOS流控规则</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503122158545.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然后新增一个流控规则</p><p>测试完以后，再次重启项目，发现规则仍然还在，该失败的还是失败，说明限流成功。</p>`,72),p=[i];function c(l,o){return n(),s("div",null,p)}const d=a(t,[["render",c],["__file","5.Rule persistence.html.vue"]]);export{d as default};
