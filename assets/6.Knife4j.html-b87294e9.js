const t=JSON.parse('{"key":"v-6ef4aa1d","path":"/projectessay/scaffold/6.Knife4j.html","title":"Knife4j","lang":"zh-CN","frontmatter":{"order":3,"author":null,"title":"Knife4j","category":["Knife4j","脚手架"],"description":"Knife4j完全遵循了Swagger的使用方式，所以可以无缝切换。 第一步，在pom.Xml文件中添加Knife4的依赖。 不需要再引入 Swagger 所需的 springfox-boot-starter了，因为 Knife4j 的 starter 里面已经加入过了。 第二步，创建一个 Java 配置类（例如 Knife4jConfig.java）...","head":[["meta",{"property":"og:url","content":"https://tim-qtp.github.io/blog/blog/projectessay/scaffold/6.Knife4j.html"}],["meta",{"property":"og:site_name","content":"Qtp"}],["meta",{"property":"og:title","content":"Knife4j"}],["meta",{"property":"og:description","content":"Knife4j完全遵循了Swagger的使用方式，所以可以无缝切换。 第一步，在pom.Xml文件中添加Knife4的依赖。 不需要再引入 Swagger 所需的 springfox-boot-starter了，因为 Knife4j 的 starter 里面已经加入过了。 第二步，创建一个 Java 配置类（例如 Knife4jConfig.java）..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-08T16:19:53.000Z"}],["meta",{"property":"article:author","content":"tim-qtp"}],["meta",{"property":"article:modified_time","content":"2025-02-08T16:19:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Knife4j\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-08T16:19:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"tim-qtp\\",\\"url\\":\\"https://github.com/tim-qtp/\\"}]}"]]},"headers":[],"git":{"createdTime":1739031593000,"updatedTime":1739031593000,"contributors":[{"name":"tim-qtp","email":"2469100031@qq.com","commits":1}]},"readingTime":{"minutes":3.03,"words":909},"filePathRelative":"projectessay/scaffold/6.Knife4j.md","localizedDate":"2025年2月8日","autoDesc":true,"excerpt":""}');export{t as data};
