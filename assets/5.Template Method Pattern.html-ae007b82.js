const t=JSON.parse('{"key":"v-054d3395","path":"/fundamental/design_atterns/5.Template%20Method%20Pattern.html","title":"模板方法模式","lang":"zh-CN","frontmatter":{"order":5,"author":null,"title":"模板方法模式","category":["设计模式"],"description":"简单来说，就是 “固定流程，灵活实现”。定义一个固定的流程（模板），这个流程由多个步骤组成。 以 JdbcTemplate 为例 JdbcTemplate 是 Spring 用来操作数据库的工具。它的流程是固定的： 1. 获取数据库连接。 2. 创建 SQL 语句。 3. 执行 SQL 语句。 4. 处理结果。 5. 关闭连接。 其中： 获取连接 和 ...","head":[["meta",{"property":"og:url","content":"https://tim-qtp.github.io/blog/blog/fundamental/design_atterns/5.Template%20Method%20Pattern.html"}],["meta",{"property":"og:site_name","content":"Qtp"}],["meta",{"property":"og:title","content":"模板方法模式"}],["meta",{"property":"og:description","content":"简单来说，就是 “固定流程，灵活实现”。定义一个固定的流程（模板），这个流程由多个步骤组成。 以 JdbcTemplate 为例 JdbcTemplate 是 Spring 用来操作数据库的工具。它的流程是固定的： 1. 获取数据库连接。 2. 创建 SQL 语句。 3. 执行 SQL 语句。 4. 处理结果。 5. 关闭连接。 其中： 获取连接 和 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-12T01:17:00.000Z"}],["meta",{"property":"article:author","content":"tim-qtp"}],["meta",{"property":"article:modified_time","content":"2025-03-12T01:17:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"模板方法模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-12T01:17:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"tim-qtp\\",\\"url\\":\\"https://github.com/tim-qtp/\\"}]}"]]},"headers":[{"level":3,"title":"以 JdbcTemplate 为例","slug":"以-jdbctemplate-为例","link":"#以-jdbctemplate-为例","children":[]}],"git":{"createdTime":1741742220000,"updatedTime":1741742220000,"contributors":[{"name":"tim-qtp","email":"2469100031@qq.com","commits":1}]},"readingTime":{"minutes":0.52,"words":156},"filePathRelative":"fundamental/design_atterns/5.Template Method Pattern.md","localizedDate":"2025年3月12日","autoDesc":true,"excerpt":""}');export{t as data};
