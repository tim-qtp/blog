import{_ as n,W as e,X as t,a2 as i}from"./framework-6a3aa88c.js";const a={},o=i('<figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503071707180.png" alt="Bean生命周期五个阶段" tabindex="0" loading="lazy"><figcaption>Bean生命周期五个阶段</figcaption></figure><ul><li><strong>实例化</strong>：Spring 首先使用构造方法或者工厂方法创建一个 Bean 的实例。在这个阶段，Bean 只是一个空的 Java 对象，还未设置任何属性。</li><li><strong>属性赋值</strong>：Spring 将配置文件中的属性值或依赖的 Bean 注入到该 Bean 中。这个过程称为依赖注入，确保 Bean 所需的所有依赖都被注入。</li><li><strong>初始化</strong>：Spring 调用 afterPropertiesSet 方法，或通过配置文件指定的 init-method 方法，完成初始化。</li><li><strong>使用中</strong>：Bean 准备好可以使用了。</li><li><strong>销毁</strong>：在容器关闭时，Spring 会调用 destroy 方法，完成 Bean 的清理工作。</li></ul>',2),r=[o];function s(l,g){return e(),t("div",null,r)}const _=n(a,[["render",s],["__file","5.Bean Life.html.vue"]]);export{_ as default};
