const e=JSON.parse('{"key":"v-01965474","path":"/microservices/sentinel/3.Isolation%20and%20Degradation.html","title":"隔离和降级","lang":"zh-CN","frontmatter":{"rder":3,"author":null,"title":"隔离和降级","category":["Sentinel","微服务"],"description":"限流是一种预防措施，虽然限流可以尽量避免因高并发而引起的服务故障，但服务还会因为其它原因而故障。 而要将这些故障控制在一定范围，避免雪崩，就要靠线程隔离（舱壁模式）和熔断降级手段了。 线程隔离之前讲到过：调用者在调用服务提供者时，给每个调用的请求分配独立线程池，出现故障时，最多消耗这个线程池内资源，避免把调用者的所有资源耗尽。（==把故障隔离在业务2的...","head":[["meta",{"property":"og:url","content":"https://tim-qtp.github.io/blog/blog/microservices/sentinel/3.Isolation%20and%20Degradation.html"}],["meta",{"property":"og:site_name","content":"Qtp"}],["meta",{"property":"og:title","content":"隔离和降级"}],["meta",{"property":"og:description","content":"限流是一种预防措施，虽然限流可以尽量避免因高并发而引起的服务故障，但服务还会因为其它原因而故障。 而要将这些故障控制在一定范围，避免雪崩，就要靠线程隔离（舱壁模式）和熔断降级手段了。 线程隔离之前讲到过：调用者在调用服务提供者时，给每个调用的请求分配独立线程池，出现故障时，最多消耗这个线程池内资源，避免把调用者的所有资源耗尽。（==把故障隔离在业务2的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-12T14:26:26.000Z"}],["meta",{"property":"article:author","content":"tim-qtp"}],["meta",{"property":"article:modified_time","content":"2025-03-12T14:26:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"隔离和降级\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-12T14:26:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"tim-qtp\\",\\"url\\":\\"https://github.com/tim-qtp/\\"}]}"]]},"headers":[{"level":2,"title":"1.FeignClient整合Sentinel","slug":"_1-feignclient整合sentinel","link":"#_1-feignclient整合sentinel","children":[{"level":3,"title":"1.1.修改配置，开启sentinel功能","slug":"_1-1-修改配置-开启sentinel功能","link":"#_1-1-修改配置-开启sentinel功能","children":[]},{"level":3,"title":"1.2.编写失败降级逻辑","slug":"_1-2-编写失败降级逻辑","link":"#_1-2-编写失败降级逻辑","children":[]},{"level":3,"title":"1.3.总结","slug":"_1-3-总结","link":"#_1-3-总结","children":[]}]},{"level":2,"title":"2.线程隔离（舱壁模式）","slug":"_2-线程隔离-舱壁模式","link":"#_2-线程隔离-舱壁模式","children":[{"level":3,"title":"2.1.线程隔离的实现方式","slug":"_2-1-线程隔离的实现方式","link":"#_2-1-线程隔离的实现方式","children":[]},{"level":3,"title":"2.2.sentinel的线程隔离","slug":"_2-2-sentinel的线程隔离","link":"#_2-2-sentinel的线程隔离","children":[]},{"level":3,"title":"2.3.总结","slug":"_2-3-总结","link":"#_2-3-总结","children":[]}]},{"level":2,"title":"3.熔断降级","slug":"_3-熔断降级","link":"#_3-熔断降级","children":[{"level":3,"title":"3.1.慢调用","slug":"_3-1-慢调用","link":"#_3-1-慢调用","children":[]},{"level":3,"title":"3.2.异常比例、异常数","slug":"_3-2-异常比例、异常数","link":"#_3-2-异常比例、异常数","children":[]}]}],"git":{"createdTime":1741789586000,"updatedTime":1741789586000,"contributors":[{"name":"tim-qtp","email":"2469100031@qq.com","commits":1}]},"readingTime":{"minutes":7.95,"words":2385},"filePathRelative":"microservices/sentinel/3.Isolation and Degradation.md","localizedDate":"2025年3月12日","autoDesc":true,"excerpt":""}');export{e as data};
