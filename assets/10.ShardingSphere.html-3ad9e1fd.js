import{_ as a,W as n,X as s,a2 as e}from"./framework-48328e23.js";const t={},l=e(`<h2 id="为什么要分库分表" tabindex="-1"><a class="header-anchor" href="#为什么要分库分表" aria-hidden="true">#</a> 为什么要分库分表？</h2><ul><li>数据量庞大。</li><li>查询性能缓慢，之前可能是 20ms，后续随着数据量的增长，查询时间呈指数增长。</li><li>数据库连接不够。</li></ul><h2 id="什么是分库分表" tabindex="-1"><a class="header-anchor" href="#什么是分库分表" aria-hidden="true">#</a> <strong>什么是分库分表</strong></h2><p>分库和分表有两种模式，垂直和水平。 分库两种模式：</p><ul><li>垂直分库：电商数据库拆分为用户、订单、商品、交易等数据库。</li></ul><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202502282233088.png" style="zoom:50%;"><ul><li><p>水平分库：用户数据库，拆分为多个，比如User_DB_0 - x。</p><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202502282233254.png" style="zoom:50%;"></li></ul><p>分表两种模式：</p><ul><li><p>垂直分表：将数据库表按照业务维度进行拆分，将不常用的信息放到一个扩展表。</p><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202502282235975.png" style="zoom:50%;"></li><li><p>水平分表：将用户表水平拆分，展现形式就是 User_Table_0 - x。</p><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202502282236738.png" style="zoom:50%;"></li></ul><h2 id="不同场景" tabindex="-1"><a class="header-anchor" href="#不同场景" aria-hidden="true">#</a> 不同场景</h2><h3 id="_1-什么场景分表" tabindex="-1"><a class="header-anchor" href="#_1-什么场景分表" aria-hidden="true">#</a> 1. 什么场景分表？</h3><ul><li>单表的<strong>数据量过大</strong>。</li><li>单表存在较高的写入场景，可能引发行锁竞争。</li><li>当表中包含大量的 TEXT、LONGTEXT 或 BLOB 等大字段。</li></ul><h3 id="_2-什么场景分库" tabindex="-1"><a class="header-anchor" href="#_2-什么场景分库" aria-hidden="true">#</a> 2. 什么场景分库？</h3><ul><li>当单个数据库支持的连接数已经不足以满足客户端需求。</li><li>数据量已经超过单个数据库实例的处理能力。</li></ul><h3 id="_3-什么场景分库分表" tabindex="-1"><a class="header-anchor" href="#_3-什么场景分库分表" aria-hidden="true">#</a> 3. 什么场景分库分表？</h3><p><mark>高并发写入和海量数据</mark></p><h2 id="分库分表设计" tabindex="-1"><a class="header-anchor" href="#分库分表设计" aria-hidden="true">#</a> 分库分表设计</h2><h3 id="_1-如何选择分片键" tabindex="-1"><a class="header-anchor" href="#_1-如何选择分片键" aria-hidden="true">#</a> 1. 如何选择分片键？</h3><ul><li>数据均匀性：分片键应该保证数据的<mark>均匀分布</mark>在各个分片上，避免出现热点数据集中在某个分片上的情况。</li><li>业务关联性：分片键应该与业务关联紧密，这样可以<mark>避免跨分片查询和跨库事务的复杂性</mark>。</li><li>数据不可变：一旦选择了分片键，它应该是<mark>不可变的</mark>，不能随着业务的变化而频繁修改。</li></ul><p>那用户名和用户ID选哪个作为分片键？</p><ul><li>用户名。用户名可以登录。</li></ul><h3 id="_2-分库分表算法" tabindex="-1"><a class="header-anchor" href="#_2-分库分表算法" aria-hidden="true">#</a> 2. 分库分表算法？</h3><p>分库分表的算法会根据业务的不同而变化，所以并没有固定算法。在业界里用的比较多的有两种：</p><ul><li>HashMod：通过对分片键进行哈希取模的分片算法。</li><li>时间范围： 基于时间范围分片算法。</li></ul><blockquote><p>分片算法讲解一个数据均匀，时间范围并不适合优惠券模板业务，因为商家用户前期比较少，后面会越来越多，所以有比较明显的不均匀问题。*</p></blockquote><h2 id="引入-shardingsphere-jdbc到项目" tabindex="-1"><a class="header-anchor" href="#引入-shardingsphere-jdbc到项目" aria-hidden="true">#</a> 引入 ShardingSphere-JDBC到项目</h2><p>1、引入依赖</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.shardingsphere<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>shardingsphere-jdbc-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.3.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、定义分片规则</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>
  	<span class="token comment"># ShardingSphere 对 Driver 自定义，实现分库分表等隐藏逻辑</span>
    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> org.apache.shardingsphere.driver.ShardingSphereDriver
    <span class="token comment"># ShardingSphere 配置文件路径</span>
    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>shardingsphere<span class="token punctuation">:</span>classpath<span class="token punctuation">:</span>shardingsphere<span class="token punctuation">-</span>config.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>shardingsphere-config.yaml</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># 数据源集合</span>
<span class="token key atrule">dataSources</span><span class="token punctuation">:</span>
  <span class="token key atrule">ds_0</span><span class="token punctuation">:</span>
    <span class="token key atrule">dataSourceClassName</span><span class="token punctuation">:</span> com.zaxxer.hikari.HikariDataSource
    <span class="token key atrule">driverClassName</span><span class="token punctuation">:</span> com.mysql.cj.jdbc.Driver
    <span class="token key atrule">jdbcUrl</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//127.0.0.1<span class="token punctuation">:</span>3306/link<span class="token punctuation">?</span>useUnicode=true<span class="token important">&amp;characterEncoding=UTF-8&amp;rewriteBatchedStatements=true&amp;allowMultiQueries=true&amp;serverTimezone=Asia/Shanghai</span>
    <span class="token key atrule">username</span><span class="token punctuation">:</span> root
    <span class="token key atrule">password</span><span class="token punctuation">:</span> root

<span class="token key atrule">rules</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token tag">!SHARDING</span>
    <span class="token key atrule">tables</span><span class="token punctuation">:</span>
      <span class="token key atrule">t_user</span><span class="token punctuation">:</span>
        <span class="token comment"># 真实数据节点，比如数据库源以及数据库在数据库中真实存在的</span>
        <span class="token key atrule">actualDataNodes</span><span class="token punctuation">:</span> ds_0.t_user_$<span class="token punctuation">{</span>0..15<span class="token punctuation">}</span>
        <span class="token comment"># 分表策略</span>
        <span class="token key atrule">tableStrategy</span><span class="token punctuation">:</span>
          <span class="token comment"># 用于单分片键的标准分片场景</span>
          <span class="token key atrule">standard</span><span class="token punctuation">:</span>
            <span class="token comment"># 分片键</span>
            <span class="token key atrule">shardingColumn</span><span class="token punctuation">:</span> username
            <span class="token comment"># 分片算法，对应 rules[0].shardingAlgorithms</span>
            <span class="token key atrule">shardingAlgorithmName</span><span class="token punctuation">:</span> user_table_hash_mod
    <span class="token comment"># 分片算法</span>
    <span class="token key atrule">shardingAlgorithms</span><span class="token punctuation">:</span>
      <span class="token comment"># 数据表分片算法</span>
      <span class="token key atrule">user_table_hash_mod</span><span class="token punctuation">:</span>
        <span class="token comment"># 根据分片键 Hash 分片</span>
        <span class="token key atrule">type</span><span class="token punctuation">:</span> HASH_MOD
        <span class="token comment"># 分片数量</span>
        <span class="token key atrule">props</span><span class="token punctuation">:</span>
          <span class="token key atrule">sharding-count</span><span class="token punctuation">:</span> <span class="token number">16</span>
<span class="token comment"># 展现逻辑 SQL &amp; 真实 SQL</span>
<span class="token key atrule">props</span><span class="token punctuation">:</span>
  <span class="token key atrule">sql-show</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="shardingsphere-数据分片核心概念" tabindex="-1"><a class="header-anchor" href="#shardingsphere-数据分片核心概念" aria-hidden="true">#</a> ShardingSphere 数据分片核心概念</h2><p>1、逻辑表</p><p>相同结构的水平拆分数据库（表）的逻辑名称，是 SQL 中表的逻辑标识。</p><p>2、真实表</p><p>在水平拆分的数据库中真实存在的物理表。</p><p><strong>比如说：</strong></p><p>逻辑表是t_user，应用程序中操作的表名，数据库中不是真实存在的，使应用认为只是与单一表交互。</p><p>真实表，t_user_0到t_user_15，是数据库真实存在的</p>`,40),p=[l];function i(c,o){return n(),s("div",null,p)}const u=a(t,[["render",i],["__file","10.ShardingSphere.html.vue"]]);export{u as default};
