import{_ as a,W as s,X as i,$ as o,a0 as e,Z as r,a1 as n,C as l}from"./framework-4e10303a.js";const c={},d=n('<h3 id="highlights" tabindex="-1"><a class="header-anchor" href="#highlights" aria-hidden="true">#</a> Highlights</h3><ul><li>什么是软路由？🛠️</li><li>软路由相较硬路由的优势⚙️</li><li>常见软路由系统介绍📦</li><li>刷入OpenWRT固件的方法📲</li><li>配置OpenWRT的步骤🖥️</li><li>科学上网工具及设置🕵️</li><li>网络问题及解决方案🔧</li></ul><h3 id="openwrt-immortalwrt" tabindex="-1"><a class="header-anchor" href="#openwrt-immortalwrt" aria-hidden="true">#</a> OpenWrt/ImmortalWrt</h3>',3),p={href:"https://firmware-selector.immortalwrt.org",target:"_blank",rel:"noopener noreferrer"},g=o("p",null,"自定义构建参考Package：",-1),h={href:"https://downloads.immortalwrt.org/releases/23.05.1/packages/x86_64/luci/Packages",target:"_blank",rel:"noopener noreferrer"},m={href:"https://openwrt.org/toh/start",target:"_blank",rel:"noopener noreferrer"},u={href:"https://www.intel.cn/content/www/cn/zh/search.html",target:"_blank",rel:"noopener noreferrer"},_=n('<h3 id="_1-什么是软路由" tabindex="-1"><a class="header-anchor" href="#_1-什么是软路由" aria-hidden="true">#</a> 1. <strong>什么是软路由？</strong></h3><ul><li><strong>软路由</strong>是指可以安装软件的路由器，它不一定是传统意义上的路由器，可能是一台迷你PC、工控小主机、开发板，甚至是闲置的笔记本电脑。</li><li>与<strong>硬路由</strong>（功能固化的家用路由器）不同，软路由可以安装各种路由系统（如<strong>OpenWrt</strong>、PFsense、RouterOS、iKuai、梅林等），并支持丰富的插件扩展功能。</li></ul><h3 id="_2-为什么需要软路由" tabindex="-1"><a class="header-anchor" href="#_2-为什么需要软路由" aria-hidden="true">#</a> 2. <strong>为什么需要软路由？</strong></h3><ul><li><strong>科学上网</strong>：软路由可以在路由器层面运行代理工具（如v2ray、Clash等），使所有连接到路由器的设备都能自动科学上网，无需在每个设备上单独配置代理。</li><li><strong>解决设备限制</strong>：某些设备（如电视盒子、VR头显）无法直接运行代理工具，软路由可以绕过这些限制，让这些设备也能访问被墙的网站。</li><li><strong>功能扩展</strong>：软路由支持安装各种插件，提供比硬路由更强大的功能，如广告过滤、流量监控、虚拟化等。</li></ul><h3 id="_3-软路由的应用场景" tabindex="-1"><a class="header-anchor" href="#_3-软路由的应用场景" aria-hidden="true">#</a> 3. <strong>软路由的应用场景</strong></h3><ul><li><strong>家庭网络</strong>：通过软路由实现全家设备的科学上网，解决电视盒子、VR设备等无法直接使用代理工具的问题。</li><li><strong>跨境电商</strong>：对于需要管理多台设备的用户（如群控），软路由可以简化科学上网的配置。</li><li><strong>网络优化</strong>：软路由支持多种网络优化功能，如负载均衡、流量控制等。</li></ul><h3 id="_5-软路由的系统安装" tabindex="-1"><a class="header-anchor" href="#_5-软路由的系统安装" aria-hidden="true">#</a> 5. <strong>软路由的系统安装</strong></h3><ul><li><strong>固件获取</strong>：可以通过官方OpenWRT、immortalWRT等获取固件，immortalWRT提供了丰富的插件支持。</li><li><strong>刷机工具</strong>：使用Rufus（Windows）或 BalenaEtcher（Mac/Linux）将固件写入SD卡或U盘。</li><li><strong>系统启动</strong>：将写入固件的SD卡或U盘插入设备，启动后即可进入OpenWRT系统。</li></ul><p><strong>下面开始实际操作一下：</strong></p><p>我这里选择<code>OpenWrt</code>，它是个开源免费的路由系统，提供了完整的路由功能，并且可以安装各式各样的插件，最主要的是安装代理插件（<code>OpoenClash</code>），实现全家科学上网。</p><p>我们需要先确定，什么样的设备能够运行<code>op</code>系统，这里说的设备，是指不同<code>SoC</code>平台的嵌入式设备，主要指的是硬路由，像X86这种通用平台不用担心这个问题。简单理解。除了电脑，你家其他所有带程序控制的设备，都算是嵌入式设备，比如冰箱、空调、洗衣机、电视、音响、路由器等等。</p><p>如果你有一条闲置的路由器，想看看能不能刷op，最简单的方式就是去官网查看。</p>',12),f={href:"https://bulianglin.com/g/aHR0cHM6Ly9vcGVud3J0Lm9yZy90b2gvc3RhcnQ",target:"_blank",rel:"noopener noreferrer"},w=n('<p>以本人接触过的设备为例：</p><ul><li>价格250的友善nanopi r2s开发板</li><li>和价格350的红米ax6000硬路由</li><li>以及价格850的某杂牌X86小主机</li></ul><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/image-20250116171131374.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这三款机器都能跑满千兆带宽，科学上网能跑500m，具体要看你的节点速度，对大部分人来说性能过剩了。</p><p>R2S颜值高，价格低，可以说就是为软路由而生的，缺点就是SoC属于RAM架构，不能说是缺点，只是很多软件和系统仅提供x86架构的版本，无法在arm架构的机器上运行，所以局限性比较大，但如果你只用来当路由科学上网不折腾的话足够了。</p><p>设备有了，接下来就要给他安装openwrt系统了，获取适合你设备的固件主要有三种途径，第一种方式最简单，使用网上别人编译好的op固件，他们在编译的时候会内置各种插件，你要做的就是下载他的固件，刷入之后就能直接用了，非常方便省事。</p><p>但缺点也很明显，为了尽量满足所有人，作者会编译大量你可能永远都不会点开的插件，显得系统很臃肿，最重要的是刷别人的固件存在安全风险，可能夹带了私货，跑他的脚本，收集你的信息，甚至给你安装“有主机上线”也说不定，所以我不推荐这种方式，你要用的话建议找你信得过的人编译的固件。</p><p>第二种方式就是自己编译固件，你想要啥插件就编译啥，最大程度满足你的需求，编译也很简单，网上有很多教程，跟着一步步操作就行了，虽然各位前辈将编译固件的难度降低到了小白就能操作的水平，但过程还是非常繁琐的。</p><p>第三种方式，也是我比较推荐的方式，直接使用官方固件，openwrt每次发布新的版本都会给所有支持的设备编译一个最小系统固件以及对应的软件源，该固件没有携带任何第三方插件，非常纯净，所以只能满足最基本的路由器功能，可以通过安装官方源里的插件添加新功能，但遗憾的是官方源有点过于纯净了，插件很少，四舍五入一下约等于没有，所以我这里推荐大家使用openwrt的分支项目，<code>ImmortalWrt</code>，以下简称imm，imm同样是免费开源的，与官方openwrt的主要区别在于，Imm的软件源提供了<strong>大量常用的第三方插件</strong>，并且提供了<strong>cdn加速的镜像源</strong>，可以非常方便的安装和管理插件。</p><p>接下来就是刷入<code>ImmortalWrt</code>的纯净op固件，配置好网络并且安装插件实现科学上网。</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/image-20250116180729174.png" alt="ImmortalWrt" tabindex="0" loading="lazy"><figcaption>ImmortalWrt</figcaption></figure><p>我这里选最新的，实际上作为一个路由器，应该以稳定为主，不宜追新，并且23版对比21版有个非常巨大的改变，配置防火墙的工具从<code>iptables</code>变成了<code>nftables</code>，有些插件还没有添加对<code>nftables</code>的支持，比如<code>ssrp</code>。</p><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/image-20250116181008818.png" alt="image-20250116181008818" style="zoom:33%;"><p>并且已经支持<code>nftables</code>的插件也可能存在兼容性问题。</p><p><code>ImmortalWrt</code>里面输入你的设备型号，官方支持的设备这里都有，比如r2s，只有一个结果，下方有两个不同文件系统格式的固件，<code>EXT4</code>和<code>SQUASHFS</code>，主要的区别是<code>SQUASHFS</code>格式修改的配置文件会写入到挂载的<code>overlay</code>分区里，而不是覆盖原来rom的文件，所以这种格式可以通过抹除<code>overlay</code>分区达到恢复出厂设置的效果。</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/image-20250116183038007.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><code>EXT4</code>的话没有这种机制，所以不能恢复出厂设置</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/image-20250116183213035.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>按你的需求选择即可。</p>',19),b=o("code",null,"imm",-1),x=o("code",null,"Imagebuilder",-1),P=o("strong",null,"一般不要去动它",-1),W=o("code",null,"PPPoP",-1),y=o("code",null,"ipv6",-1),R={href:"https://downloads.immortalwrt.org/releases/23.05.1/packages/x86_64/luci/Packages",target:"_blank",rel:"noopener noreferrer"},k=o("code",null,"OpenClash",-1),q=o("code",null,"luci-app-openclash",-1),S=n("<p>下方还可以设置固件安装之后首次开机运行的脚本，比如修改LAN的ip地址，设置<code>PPPoP</code>的账号密码等等，配置好之后就可以请求构建了，这样就会利用imm服务器的计算资源帮我们编译固件了，可以说是非常方便。</p><p>但是除非你有很多机器要定制化安装，否则不建议使用该功能。因为本来就只能添加imm软件源里有的插件，而这些插件都能在刷好纯净固件之后直接安装，没必要先编译进去，再者编译也需要时间，你还得等，也可能会出错导致编译失败，所以建议直接下载imm提供的纯净固件，编译好之后可以在这里查看编译过程中的日志输出，在下方下载刚才生成的自定义固件。</p><p>接着演示<code>x86</code>固件，目前你能买到的都是64位的cpu指令集架构，<code>x86</code>提供了非常多的固件类型，很多都是给虚拟机用的，我们主要看结尾是<code>img.gz</code>的文件，比如第一个就是。</p><p><code>EXT4</code>表示文件系统格式，刚才讲过与之对应的是<code>squashfs</code>，<code>combined</code>译为组合，<strong>表示内核与根文件系统都在固件里</strong>，<code>efi</code>是引导类型，或者叫<code>uefi</code>，近些年的主板都支持<code>efi</code>引导，后面的img就是固件的格式，<code>gz</code>就表示这是一个压缩文件，这是我们需要的，点击下载，下方还提供了非<code>efi</code>引导的固件，也就是传统的<code>Legacy</code>引导，如果你的主板不支持<code>efi</code>引导的话就刷这个，不确定的话也可以直接刷这个。</p><p>再下方的话就是<code>squashfs</code>的文件系统，也就是支持恢复出厂设置的格式，按需选择即可，同样<code>squashfs</code>也提供了非<code>efi</code>的<code>Legacy</code>引导固件。</p><p><code>img</code>固件里面就是一个完整的<code>openwrt</code>系统，我们要做的就是将内容完整的拷贝到你的u盘或者sd卡里，这个操作也叫写盘，<code>arm</code>小主机一般都是使用sd卡当作硬盘，而<code>x86</code>小主机可以在机器内部安装硬盘，也可以通过修改启动引导用U盘当作系统盘。</p>",6),O={href:"https://rufus.ie/zh/",target:"_blank",rel:"noopener noreferrer"},C=n('<p>操作非常简单，先以arm小主机R2S为例，将你的sd读卡器插入电脑的usb接口，软件会自动识别，然后将你需要刷入的固件拖入软件界面任意位置，可以直接拖入gz压缩包文件，无需解压，然后直接点击开始。</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/image-20250116192927399.png" alt="Rufus" tabindex="0" loading="lazy"><figcaption>Rufus</figcaption></figure><p>注意确认设备是不是你插入的sd卡，里面的分区信息和数据全部都会被抹掉，注意提前做好备份。</p><p>等待进度条走完之后就刷入成功了，此时你的sd卡里面就有一个<code>OpenWrt</code>的操作系统了，接着插入<code>R2S</code>，通电开机，就会自动启动<code>OpenWrt</code>系统了.</p><p>虽然没法接显示器，但相信我openwrt已经运行！</p><p>其实不用担心sd卡影响系统运行速度，开机后系统会被加载到内存里运行，不是运行在sd卡里，除非你要进行高强度的文件读写操作，否则是不会影响系统运行速度的。</p><h3 id="_6-软路由的配置" tabindex="-1"><a class="header-anchor" href="#_6-软路由的配置" aria-hidden="true">#</a> 6. <strong>软路由的配置</strong></h3><ul><li><strong>网络配置</strong>：设置LAN口和WAN口，确保软路由能够正常连接互联网。</li><li><strong>关闭IPv6</strong>：为了避免透明代理中的问题，建议关闭IPv6。</li><li><strong>插件安装</strong>：通过immortalWRT的软件源安装各种插件，如OpenClash、Passwall、HomeProxy等，实现科学上网。</li></ul><h3 id="_7-科学上网插件的使用" tabindex="-1"><a class="header-anchor" href="#_7-科学上网插件的使用" aria-hidden="true">#</a> 7. <strong>科学上网插件的使用</strong></h3><ul><li><strong>Passwall</strong>：支持节点订阅和手动添加节点，配置简单，适合初学者。</li><li><strong>HomeProxy</strong>：基于sing-box内核，支持多种协议，适合高级用户。</li><li><strong>OpenClash</strong>：功能强大，支持Clash内核，适合需要精细控制节点的用户。</li></ul><h3 id="_8-软路由的网络拓扑" tabindex="-1"><a class="header-anchor" href="#_8-软路由的网络拓扑" aria-hidden="true">#</a> 8. <strong>软路由的网络拓扑</strong></h3><ul><li><strong>主路由模式</strong>：软路由作为家庭网络的主路由，负责拨号和NAT，所有设备通过软路由上网。</li><li><strong>旁路由模式</strong>：软路由作为旁路由，只负责科学上网，主路由仍然负责拨号和NAT。</li></ul>',12);function T(v,z){const t=l("ExternalLinkIcon");return s(),i("div",null,[d,o("p",null,[e("固件选择器："),o("a",p,[e("https://firmware-selector.immortalwrt.org"),r(t)])]),g,o("p",null,[o("a",h,[e("https://downloads.immortalwrt.org/releases/23.05.1/packages/x86_64/luci/Packages"),r(t)])]),o("p",null,[e("OpenWrt支持的设备："),o("a",m,[e("https://openwrt.org/toh/start"),r(t)])]),o("p",null,[e("英特尔CPU性能对比："),o("a",u,[e("https://www.intel.cn/content/www/cn/zh/search.html"),r(t)])]),_,o("p",null,[e("OpenWrt支持的设备："),o("a",f,[e("https://openwrt.org/toh/start"),r(t)])]),w,o("p",null,[e("除了使用"),b,e("预编译好的op固件，我们也可以点击这里使用网站提供的"),x,e("在线自定义编译固件，可以在这里设置你要编译到固件里的插件，输入框里的是默认需要编译的，保证最小系统能够正常提供路由功能，"),P,e("，除非你明确知道自己的需求，比如你确定你不需要"),W,e("拨号，就可以把这两个删了，不需要"),y,e("，就可以把ipv6相关组件删掉，如果想要添加插件，你需要先知道插件的完整包名，可以进入这个链接查看luci"),o("a",R,[e("包名"),r(t)]),e("，比如我要安装"),k,e("，那么他的完整包名就是"),q,e("，将其添加到预安装列表，可以添加多个，注意用空格隔开。")]),S,o("p",null,[e("常见的写盘工具，首先最推荐的就是这个"),o("a",O,[e("rufus"),r(t)]),e("，非常小巧，只有1.4M大小，不过只支持windows，下载这个p版，也就是便携版。")]),C])}const N=a(c,[["render",T],["__file","2.Soft Router Prerequisite Home Network Communication.html.vue"]]);export{N as default};
