const t=JSON.parse('{"key":"v-a977bdea","path":"/Java/basic/16.difference%20between%20abstract%20class%20and%20interface.html","title":"抽象类和接口","lang":"zh-CN","frontmatter":{"order":16,"author":null,"title":"抽象类和接口","category":["Java基础"],"description":"1. 抽象类可以包含成员变量和非抽象方法（也就是具体方法）； 2. 而接口只能包含常量和抽象方法，不提供实现。任何实现接口的类都必须提供这些方法的具体实现。 抽象类支持单继承，而接口支持多继承。 接口：自上而下，是“会”的关系，飞机和鸟都实现了“可以飞”的接口，这意味着它们都具有飞行的能力，但实现方式可能不同。 抽象类：自下而上，将某些共性的东西抽离出...","head":[["meta",{"property":"og:url","content":"https://tim-qtp.github.io/blog/blog/Java/basic/16.difference%20between%20abstract%20class%20and%20interface.html"}],["meta",{"property":"og:site_name","content":"Qtp"}],["meta",{"property":"og:title","content":"抽象类和接口"}],["meta",{"property":"og:description","content":"1. 抽象类可以包含成员变量和非抽象方法（也就是具体方法）； 2. 而接口只能包含常量和抽象方法，不提供实现。任何实现接口的类都必须提供这些方法的具体实现。 抽象类支持单继承，而接口支持多继承。 接口：自上而下，是“会”的关系，飞机和鸟都实现了“可以飞”的接口，这意味着它们都具有飞行的能力，但实现方式可能不同。 抽象类：自下而上，将某些共性的东西抽离出..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-25T15:57:32.000Z"}],["meta",{"property":"article:author","content":"tim-qtp"}],["meta",{"property":"article:modified_time","content":"2025-02-25T15:57:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"抽象类和接口\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-25T15:57:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"tim-qtp\\",\\"url\\":\\"https://github.com/tim-qtp/\\"}]}"]]},"headers":[],"git":{"createdTime":1739031593000,"updatedTime":1740499052000,"contributors":[{"name":"MBTIAITOWN","email":"wilz1019@outlook.com","commits":1},{"name":"tim-qtp","email":"2469100031@qq.com","commits":1}]},"readingTime":{"minutes":1.25,"words":376},"filePathRelative":"Java/basic/16.difference between abstract class and interface.md","localizedDate":"2025年2月8日","autoDesc":true,"excerpt":""}');export{t as data};
