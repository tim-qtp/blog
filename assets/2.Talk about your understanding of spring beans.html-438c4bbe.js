import{_ as e,W as o,X as n,a2 as a}from"./framework-6a3aa88c.js";const r={},t=a('<h3 id="什么是bean" tabindex="-1"><a class="header-anchor" href="#什么是bean" aria-hidden="true">#</a> 什么是Bean？</h3><ol><li><p>由spring ioc容器管理的对象称为bean；</p></li><li><p>定义bean有哪些方式：<mark>xml</mark>，<mark>注解</mark>（@Controller控制层，@Service逻辑层，@Repository数据访问层，@Component）组件的名称默认是类名首字母小写，<mark>java配置</mark></p></li><li><p>如何加载：</p><p>spring启动以后，Spring 将 配置内容对应的 Bean 的定义信息（如类名、作用域、依赖关系等）封装为 <code>BeanDefinition</code> 对象，并注册到 <code>BeanFactory</code> 中（通常是 <code>DefaultListableBeanFactory</code>）以便后续的Bean实例化和管理，这样spring创建对象的时候就不需要再次去读取和解析这些配置文件了；</p><p>然后这个时候，BeanFactory也创建了；</p><p>接下来就得实例化Bean（也就是属性赋值）了，Spring根据<code>BeanDefinition</code>中的类信息，通过反射创建Bean实例。如果Bean有构造函数注入的依赖，Spring会先解析这些依赖，并在实例化时注入。</p><blockquote><p><strong>依赖注入</strong>：对于通过<code>@Autowired</code>、<code>@Resource</code>或<code>@Inject</code>注解的依赖，Spring会在实例化后进行注入。Spring会查找匹配的Bean，并将其注入到目标Bean的字段、构造函数或方法中。</p></blockquote><p><strong>Bean后处理器处理</strong>： Bean 初始化前后，Spring 会调用所有实现了 <code>BeanPostProcessor</code> 接口的 Bean，允许它们对 Bean 进行额外的处理（如动态代理、AOP增强等），<strong>常见的 BeanPostProcessor</strong>：如 <code>AutowiredAnnotationBeanPostProcessor</code>（处理 <code>@Autowired</code> 注解）、<code>CommonAnnotationBeanPostProcessor</code>（处理 <code>@Resource</code> 等注解）。</p><p><strong>初始化 Bean</strong>：如果 Bean 实现了 <code>InitializingBean</code> 接口，Spring 会调用 <code>afterPropertiesSet()</code> 方法。如果 Bean 定义了自定义的初始化方法（通过 <code>@PostConstruct</code> 注解或 XML 配置中的 <code>init-method</code> 属性），Spring 会调用该方法。初始化完成后，Bean进入“就绪”状态，可以被其他Bean使用。</p><p><strong>Bean 使用</strong>：经过上述步骤后，Bean 已经准备好被应用程序使用。其他 Bean 或组件可以通过依赖注入的方式使用该 Bean。</p><p><strong>销毁 Bean</strong>：如果 Bean 实现了 <code>DisposableBean</code> 接口，Spring 会在容器关闭时调用 <code>destroy()</code> 方法。开发者也可以通过 <code>@PreDestroy</code> 注解或配置中的 <code>destroy-method</code> 属性，指定清理逻辑。</p></li></ol><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/202503071421033.png" style="zoom:50%;">',3),c=[t];function s(d,i){return o(),n("div",null,c)}const B=e(r,[["render",s],["__file","2.Talk about your understanding of spring beans.html.vue"]]);export{B as default};
