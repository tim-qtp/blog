const t=JSON.parse('{"key":"v-370c83d4","path":"/Java/mysql/16.Optimistic%20and%20pessimistic%20locking.html","title":"乐观锁和悲观锁","lang":"zh-CN","frontmatter":{"order":16,"author":null,"title":"乐观锁和悲观锁","category":["MySQL","数据库"],"description":"乐观锁： 顾名思义，就是很乐观，每次去拿数据的时候都认为别人不会修改，所以不会上锁，但是在更 新的时候会判断一下在此期间别人有没有去更新这个数据，可以使用版本号等机制。 乐观锁适 用于多读的应用类型，这样可以提高吞吐量，像数据库提供的类似于write_condition机制， 其实都是提供的乐观锁。在Java中java.util.concurrent....","head":[["meta",{"property":"og:url","content":"https://tim-qtp.github.io/blog/blog/Java/mysql/16.Optimistic%20and%20pessimistic%20locking.html"}],["meta",{"property":"og:site_name","content":"Qtp"}],["meta",{"property":"og:title","content":"乐观锁和悲观锁"}],["meta",{"property":"og:description","content":"乐观锁： 顾名思义，就是很乐观，每次去拿数据的时候都认为别人不会修改，所以不会上锁，但是在更 新的时候会判断一下在此期间别人有没有去更新这个数据，可以使用版本号等机制。 乐观锁适 用于多读的应用类型，这样可以提高吞吐量，像数据库提供的类似于write_condition机制， 其实都是提供的乐观锁。在Java中java.util.concurrent...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-18T07:23:14.000Z"}],["meta",{"property":"article:author","content":"tim-qtp"}],["meta",{"property":"article:modified_time","content":"2025-03-18T07:23:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"乐观锁和悲观锁\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-18T07:23:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"tim-qtp\\",\\"url\\":\\"https://github.com/tim-qtp/\\"}]}"]]},"headers":[],"git":{"createdTime":1742282594000,"updatedTime":1742282594000,"contributors":[{"name":"tim-qtp","email":"2469100031@qq.com","commits":1}]},"readingTime":{"minutes":1.23,"words":369},"filePathRelative":"Java/mysql/16.Optimistic and pessimistic locking.md","localizedDate":"2025年3月18日","autoDesc":true,"excerpt":""}');export{t as data};
