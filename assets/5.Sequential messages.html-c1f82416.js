const t=JSON.parse('{"key":"v-763e349a","path":"/microservices/rocketmq/5.Sequential%20messages.html","title":"顺序消息如何实现？","lang":"zh-CN","frontmatter":{"order":5,"author":null,"title":"顺序消息如何实现？","category":["Rocketmq","框架"],"description":"常见方法： 单一生产者和单一消费者： 使用单个生产者发送消息到单个队列，并由单个消费者处理消息。这样可以确保消息按照生产者的发送顺序消费。; 这种方法简单但容易成为性能瓶颈，无法充分利用并发的优势。; 分区与顺序键（Partition Key）： 在支持分区（Partition） 的消息队列中（如 ==Kafka、RocketMQ==），可以通过 Pa...","head":[["meta",{"property":"og:url","content":"https://tim-qtp.github.io/blog/blog/microservices/rocketmq/5.Sequential%20messages.html"}],["meta",{"property":"og:site_name","content":"Qtp"}],["meta",{"property":"og:title","content":"顺序消息如何实现？"}],["meta",{"property":"og:description","content":"常见方法： 单一生产者和单一消费者： 使用单个生产者发送消息到单个队列，并由单个消费者处理消息。这样可以确保消息按照生产者的发送顺序消费。; 这种方法简单但容易成为性能瓶颈，无法充分利用并发的优势。; 分区与顺序键（Partition Key）： 在支持分区（Partition） 的消息队列中（如 ==Kafka、RocketMQ==），可以通过 Pa..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-09T10:58:45.000Z"}],["meta",{"property":"article:author","content":"tim-qtp"}],["meta",{"property":"article:modified_time","content":"2025-03-09T10:58:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"顺序消息如何实现？\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-09T10:58:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"tim-qtp\\",\\"url\\":\\"https://github.com/tim-qtp/\\"}]}"]]},"headers":[],"git":{"createdTime":1741517925000,"updatedTime":1741517925000,"contributors":[{"name":"tim-qtp","email":"2469100031@qq.com","commits":1}]},"readingTime":{"minutes":2,"words":599},"filePathRelative":"microservices/rocketmq/5.Sequential messages.md","localizedDate":"2025年3月9日","autoDesc":true,"excerpt":""}');export{t as data};
