import{_ as a,W as s,X as n,a2 as e}from"./framework-48328e23.js";const o={},t=e(`<p>&amp;是二进制位运算，只有当两个相应的位都为1时，结果位才为1，否则为0。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token comment">// 二进制表示为 0101</span>
<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">// 二进制表示为 0011</span>
<span class="token keyword">int</span> result <span class="token operator">=</span> a <span class="token operator">&amp;</span> b<span class="token punctuation">;</span> <span class="token comment">// 结果为 1，二进制表示为 0001</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>&amp;&amp;是逻辑运算符，两个都为true才为true</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>bool a <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
bool b <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
bool result <span class="token operator">=</span> a <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">;</span> <span class="token comment">// 结果为 false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),p=[t];function l(c,r){return s(),n("div",null,p)}const d=a(o,[["render",l],["__file","11.yu.html.vue"]]);export{d as default};
