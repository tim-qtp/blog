import{_ as o,W as l,X as t,$ as n,a1 as s,Z as e,a2 as c,C as r}from"./framework-48328e23.js";const i={},p={class:"hint-container tip"},d=n("p",{class:"hint-container-title"},"提示",-1),u=n("p",null,"开坑之前，想的是使用Electron和Tauri开发一款桌面程序。",-1),g=n("p",null,"然后最近也在研究Clash Meta内核，不过现在改名了，叫Mihamo，作者也挺有趣，和去年Clash For Windows删库事件可能有千丝万缕影响，改成了崩坏。",-1),m=n("p",null,"然后发现Clash-Verge-Rev正好是用Tauri构建的，而且开源，所以正中下怀。",-1),k={href:"https://mp.weixin.qq.com/s/UxmJxU4-fv9GeRxl2fzOGw",target:"_blank",rel:"noopener noreferrer"},h={href:"https://wiki.metacubex.one/config/",target:"_blank",rel:"noopener noreferrer"},v=c(`<h2 id="先从配置文件开始" tabindex="-1"><a class="header-anchor" href="#先从配置文件开始" aria-hidden="true">#</a> 先从配置文件开始</h2><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># Generated by Clash Verge</span>

<span class="token comment"># Clash 的混合代理端口，支持 HTTP、HTTPS 和 SOCKS 代理协议的请求。</span>
<span class="token key atrule">mixed-port</span><span class="token punctuation">:</span> <span class="token number">7897</span> 
<span class="token comment"># 单独的 SOCKS5 代理端口</span>
<span class="token key atrule">socks-port</span><span class="token punctuation">:</span> <span class="token number">7898</span>
<span class="token comment"># 支持纯 HTTP 和 HTTPS 协议的代理请求</span>
<span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">7899</span>
<span class="token key atrule">log-level</span><span class="token punctuation">:</span> debug
<span class="token comment"># 允许局域网设备通过本机的 Clash 代理访问互联网</span>
<span class="token key atrule">allow-lan</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token comment"># 流量分流模式</span>
<span class="token comment"># rule：根据规则（如域名匹配、IP 匹配等）分流。</span>
<span class="token key atrule">mode</span><span class="token punctuation">:</span> rule
<span class="token comment"># 配置外部控制端口，通过这个端口，外部应用（如Clash Dashboard）可以连接并控制 Clash。</span>
<span class="token comment"># 详细看下面折叠</span>
<span class="token key atrule">external-controller</span><span class="token punctuation">:</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">9097</span>
<span class="token key atrule">secret</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span>
<span class="token comment"># TUN 模式配置：实现系统级流量代理</span>
<span class="token key atrule">tun</span><span class="token punctuation">:</span>
  <span class="token key atrule">auto-detect-interface</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#自动检测网络接口</span>
  <span class="token key atrule">auto-route</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#自动路由流量，将TUN模式的流量重定向到代理</span>
  <span class="token key atrule">device</span><span class="token punctuation">:</span> Mihomo <span class="token comment">#虚拟TUN网卡的设备名称</span>
  <span class="token key atrule">dns-hijack</span><span class="token punctuation">:</span> <span class="token comment">#拦截所有DNS请求（端口 53），强制通过Clash处理</span>
  <span class="token punctuation">-</span> any<span class="token punctuation">:</span><span class="token number">53</span>
  <span class="token key atrule">mtu</span><span class="token punctuation">:</span> <span class="token number">1500</span> <span class="token comment">#设置最大传输单元（MTU），默认1500字节</span>
  <span class="token key atrule">stack</span><span class="token punctuation">:</span> mixed <span class="token comment">#协议栈：支持混合（IPv4和IPv6）</span>
  <span class="token key atrule">strict-route</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment">#是否强制路由流量</span>
<span class="token comment"># 跨域控制配置</span>
<span class="token key atrule">external-controller-cors</span><span class="token punctuation">:</span>
  <span class="token key atrule">allow-private-network</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#允许来自私有网络（如局域网）的跨域访问</span>
  <span class="token key atrule">allow-origins</span><span class="token punctuation">:</span> <span class="token comment">#定义允许的跨域来源，* 表示允许所有来源</span>
  <span class="token punctuation">-</span> <span class="token string">&#39;*&#39;</span>
<span class="token key atrule">unified-delay</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#优化不同节点的测速结果，统一延迟计算</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>外部控制设置 RESTful API 文档</summary><h3 id="日志" tabindex="-1"><a class="header-anchor" href="#日志" aria-hidden="true">#</a> <span style="color:#00BFFF;">日志</span></h3><ul><li><p><span style="color:#FFA500;"><strong>接口</strong></span>: <code>/logs</code></p><ul><li><p><strong>方法</strong>: <span style="color:#32CD32;"><code>GET</code></span></p><ul><li><p><strong>完整路径</strong>: <span style="color:#1E90FF;"><code>GET /logs</code></span></p></li><li><p><strong>描述</strong>: 获取实时日志</p></li></ul></li></ul></li></ul><hr><h3 id="流量" tabindex="-1"><a class="header-anchor" href="#流量" aria-hidden="true">#</a> <span style="color:#00BFFF;">流量</span></h3><ul><li><span style="color:#FFA500;"><strong>接口</strong></span>: <code>/traffic</code><ul><li><p><strong>方法</strong>: <span style="color:#32CD32;"><code>GET</code></span></p><ul><li><p><strong>完整路径</strong>: <span style="color:#1E90FF;"><code>GET /traffic</code></span></p></li><li><p><strong>描述</strong>: 获取实时流量数据</p></li></ul></li></ul></li></ul><hr><h3 id="版本" tabindex="-1"><a class="header-anchor" href="#版本" aria-hidden="true">#</a> <span style="color:#00BFFF;">版本</span></h3><ul><li><span style="color:#FFA500;"><strong>接口</strong></span>: <code>/version</code><ul><li><p><strong>方法</strong>: <span style="color:#32CD32;"><code>GET</code></span></p><ul><li><p><strong>完整路径</strong>: <span style="color:#1E90FF;"><code>GET /version</code></span></p></li><li><p><strong>描述</strong>: 获取 Clash 版本</p></li></ul></li></ul></li></ul><hr><h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> <span style="color:#00BFFF;">配置</span></h3><ul><li><span style="color:#FFA500;"><strong>接口</strong></span>: <code>/configs</code><ul><li><strong>方法</strong>: <span style="color:#32CD32;"><code>GET</code></span><ul><li><strong>完整路径</strong>: <span style="color:#1E90FF;"><code>GET /configs</code></span></li><li><strong>描述</strong>: 获取基础配置</li></ul></li><li><strong>方法</strong>: <span style="color:#32CD32;"><code>PUT</code></span><ul><li><strong>完整路径</strong>: <span style="color:#1E90FF;"><code>PUT /configs</code></span></li><li><strong>描述</strong>: 重新加载配置文件</li></ul></li><li><strong>方法</strong>: <span style="color:#32CD32;"><code>PATCH</code></span><ul><li><strong>完整路径</strong>: <span style="color:#1E90FF;"><code>PATCH /configs</code></span></li><li><strong>描述</strong>: 增量修改配置</li></ul></li></ul></li></ul><hr><h2 id="节点" tabindex="-1"><a class="header-anchor" href="#节点" aria-hidden="true">#</a> <span style="color:#00BFFF;">节点</span></h2><ul><li><span style="color:#FFA500;"><strong>接口</strong></span>: <code>/proxies</code><ul><li><strong>方法</strong>: <span style="color:#32CD32;"><code>GET</code></span><ul><li><strong>完整路径</strong>: <span style="color:#1E90FF;"><code>GET /proxies</code></span></li><li><strong>描述</strong>: 获取所有节点信息</li></ul></li></ul></li><li><code>/proxies/:name</code><ul><li><strong>方法</strong>: <span style="color:#32CD32;"><code>GET</code></span><ul><li><strong>完整路径</strong>: <span style="color:#1E90FF;"><code>GET /proxies/:name</code></span></li><li><strong>描述</strong>: 获取指定节点信息</li></ul></li><li><strong>方法</strong>: <span style="color:#32CD32;"><code>PUT</code></span><ul><li><strong>完整路径</strong>: <span style="color:#1E90FF;"><code>PUT /proxies/:name</code></span></li><li><strong>描述</strong>: 切换 Selector 中选中的节点</li></ul></li></ul></li><li><code>/proxies/:name/delay</code><ul><li><strong>方法</strong>: <span style="color:#32CD32;"><code>GET</code></span><ul><li><strong>完整路径</strong>: <span style="color:#1E90FF;"><code>GET /proxies/:name/delay</code></span></li><li><strong>描述</strong>: 获取指定节点的延迟测试信息</li></ul></li></ul></li></ul><hr><h3 id="规则" tabindex="-1"><a class="header-anchor" href="#规则" aria-hidden="true">#</a> <span style="color:#00BFFF;">规则</span></h3><ul><li><p><span style="color:#FFA500;"><strong>接口</strong></span>: <code>/rules</code></p><ul><li><p><strong>方法</strong>: <span style="color:#32CD32;"><code>GET</code></span></p><ul><li><p><strong>完整路径</strong>: <span style="color:#1E90FF;"><code>GET /rules</code></span></p></li><li><p><strong>描述</strong>: 获取规则信息</p></li></ul></li></ul></li></ul><hr><h3 id="连接" tabindex="-1"><a class="header-anchor" href="#连接" aria-hidden="true">#</a> <span style="color:#00BFFF;">连接</span></h3><ul><li><span style="color:#FFA500;"><strong>接口</strong></span>: <code>/connections</code><ul><li><strong>方法</strong>: <span style="color:#32CD32;"><code>GET</code></span><ul><li><strong>完整路径</strong>: <span style="color:#1E90FF;"><code>GET /connections</code></span></li><li><strong>描述</strong>: 获取连接信息</li></ul></li><li><strong>方法</strong>: <span style="color:#32CD32;"><code>DELETE</code></span><ul><li><strong>完整路径</strong>: <span style="color:#1E90FF;"><code>DELETE /connections</code></span></li><li><strong>描述</strong>: 关闭所有连接</li></ul></li></ul></li><li><code>/connections/:id</code><ul><li><strong>方法</strong>: <span style="color:#32CD32;"><code>DELETE</code></span><ul><li><strong>完整路径</strong>: <span style="color:#1E90FF;"><code>DELETE /connections/:id</code></span></li><li><strong>描述</strong>: 关闭指定连接</li></ul></li></ul></li></ul><hr><h3 id="dns查询" tabindex="-1"><a class="header-anchor" href="#dns查询" aria-hidden="true">#</a> <span style="color:#00BFFF;">DNS查询</span></h3><ul><li><span style="color:#FFA500;"><strong>接口</strong></span>: <code>/dns/query</code><ul><li><p><strong>方法</strong>: <span style="color:#32CD32;"><code>GET</code></span></p><ul><li><p><strong>完整路径</strong>: <span style="color:#1E90FF;"><code>GET /dns/query?name={name}[&amp;type={type}]</code></span></p></li><li><p><strong>描述</strong>: 获取指定域名和类型的 DNS 查询数据</p></li></ul></li><li><p><strong>参数</strong>:</p><ul><li><span style="color:#FFA500;"><strong>name (必填)</strong></span>: 要查询的域名</li><li><span style="color:#FFA500;"><strong>type (可选)</strong></span>: 要查询的 DNS 记录类型 (例如, A, MX, CNAME)。默认为 <code>A</code>。</li></ul></li><li><p><strong>示例</strong>: <span style="color:#1E90FF;"><code>GET /dns/query?name=example.com&amp;type=A</code></span></p></li></ul></li></ul></details>`,3);function y(F,b){const a=r("ExternalLinkIcon");return l(),t("div",null,[n("div",p,[d,u,g,m,n("p",null,[s("Tel群中也正好看见大家在讨论得物从Electron迁移到Tauri的事情，"),n("a",k,[s("https://mp.weixin.qq.com/s/UxmJxU4-fv9GeRxl2fzOGw"),e(a)]),s("，所以，开扒！")])]),n("p",null,[s("放一个内核文档地址："),n("a",h,[s("配置 - Docs (metacubex.one)"),e(a)])]),v])}const T=o(i,[["render",y],["__file","4.Clash Verge Rev.html.vue"]]);export{T as default};
