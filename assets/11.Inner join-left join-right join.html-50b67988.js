import{_ as t,W as e,X as n,a2 as a}from"./framework-48328e23.js";const s={},l=a(`<h3 id="inner-join" tabindex="-1"><a class="header-anchor" href="#inner-join" aria-hidden="true">#</a> INNER JOIN：</h3><ul><li>只返回两个表中匹配的行。如果没有匹配，则该行不会出现在结果集中。</li><li>适用于只关心交集数据的场景。</li></ul><h3 id="left-join-或-left-outer-join" tabindex="-1"><a class="header-anchor" href="#left-join-或-left-outer-join" aria-hidden="true">#</a> LEFT JOIN（或 LEFT OUTER JOIN）：</h3><ul><li>返回左表中的所有行，即使右表中没有匹配的行。如果右表没有匹配，则结果中的右侧列会显示为NULL。</li><li>适用于需要保留左表所有数据的场景。</li></ul><h3 id="right-join-或-right-outer-join" tabindex="-1"><a class="header-anchor" href="#right-join-或-right-outer-join" aria-hidden="true">#</a> RIGHT JOIN（或 RIGHT OUTER JOIN）：</h3><ul><li>返回右表中的所有行，即使左表中没有匹配的行。如果左表没有匹配，则结果中的左侧列会显示为NULL。</li><li>适用于需要保留右表所有数据的场景。</li></ul><h3 id="例子" tabindex="-1"><a class="header-anchor" href="#例子" aria-hidden="true">#</a> 例子：</h3><p>假设我们有两个表：</p><ul><li><p><strong>表1：学生表（Students）</strong></p><table><thead><tr><th style="text-align:left;">学号</th><th style="text-align:left;">姓名</th></tr></thead><tbody><tr><td style="text-align:left;">001</td><td style="text-align:left;">张三</td></tr><tr><td style="text-align:left;">002</td><td style="text-align:left;">李四</td></tr><tr><td style="text-align:left;">003</td><td style="text-align:left;">王五</td></tr></tbody></table></li><li><p><strong>表2：成绩表（Scores）</strong></p><table><thead><tr><th style="text-align:left;">学号</th><th style="text-align:left;">课程</th><th style="text-align:left;">分数</th></tr></thead><tbody><tr><td style="text-align:left;">001</td><td style="text-align:left;">数学</td><td style="text-align:left;">90</td></tr><tr><td style="text-align:left;">002</td><td style="text-align:left;">英语</td><td style="text-align:left;">85</td></tr></tbody></table></li></ul><h3 id="_1-如果使用内连接查询" tabindex="-1"><a class="header-anchor" href="#_1-如果使用内连接查询" aria-hidden="true">#</a> 1. 如果使用内连接查询：</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> Students<span class="token punctuation">.</span>学号<span class="token punctuation">,</span> Students<span class="token punctuation">.</span>姓名<span class="token punctuation">,</span> Scores<span class="token punctuation">.</span>课程<span class="token punctuation">,</span> Scores<span class="token punctuation">.</span>分数
<span class="token keyword">FROM</span> Students
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> Scores <span class="token keyword">ON</span> Students<span class="token punctuation">.</span>学号 <span class="token operator">=</span> Scores<span class="token punctuation">.</span>学号<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果为：</p><table><thead><tr><th style="text-align:left;">学号</th><th style="text-align:left;">姓名</th><th style="text-align:left;">课程</th><th style="text-align:left;">分数</th></tr></thead><tbody><tr><td style="text-align:left;">001</td><td style="text-align:left;">张三</td><td style="text-align:left;">数学</td><td style="text-align:left;">90</td></tr><tr><td style="text-align:left;">002</td><td style="text-align:left;">李四</td><td style="text-align:left;">英语</td><td style="text-align:left;">85</td></tr></tbody></table><p><strong>解释</strong>：内连接只返回两个表中匹配的记录。学号为<code>003</code>的学生没有成绩记录，因此不会出现在结果中。</p><hr><h3 id="_2-左连接-left-join" tabindex="-1"><a class="header-anchor" href="#_2-左连接-left-join" aria-hidden="true">#</a> 2. <strong>左连接（LEFT JOIN）</strong></h3><p>左连接会返回左表（第一个表）的所有记录，即使右表中没有匹配的记录。如果右表中没有匹配的记录，则结果中右表的字段会显示为<code>NULL</code>。</p><h4 id="例子-1" tabindex="-1"><a class="header-anchor" href="#例子-1" aria-hidden="true">#</a> 例子：</h4><p>使用左连接查询：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> Students<span class="token punctuation">.</span>学号<span class="token punctuation">,</span> Students<span class="token punctuation">.</span>姓名<span class="token punctuation">,</span> Scores<span class="token punctuation">.</span>课程<span class="token punctuation">,</span> Scores<span class="token punctuation">.</span>分数
<span class="token keyword">FROM</span> Students
<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> Scores <span class="token keyword">ON</span> Students<span class="token punctuation">.</span>学号 <span class="token operator">=</span> Scores<span class="token punctuation">.</span>学号<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果为：</p><table><thead><tr><th style="text-align:left;">学号</th><th style="text-align:left;">姓名</th><th style="text-align:left;">课程</th><th style="text-align:left;">分数</th></tr></thead><tbody><tr><td style="text-align:left;">001</td><td style="text-align:left;">张三</td><td style="text-align:left;">数学</td><td style="text-align:left;">90</td></tr><tr><td style="text-align:left;">002</td><td style="text-align:left;">李四</td><td style="text-align:left;">英语</td><td style="text-align:left;">85</td></tr><tr><td style="text-align:left;">003</td><td style="text-align:left;">王五</td><td style="text-align:left;">NULL</td><td style="text-align:left;">NULL</td></tr></tbody></table><p><strong>解释</strong>：左连接返回了左表（学生表）的所有记录。即使学号为<code>003</code>的学生没有成绩记录，也会出现在结果中，右表的字段显示为<code>NULL</code>。</p><hr><h3 id="_3-右连接-right-join" tabindex="-1"><a class="header-anchor" href="#_3-右连接-right-join" aria-hidden="true">#</a> 3. <strong>右连接（RIGHT JOIN）</strong></h3><p>右连接会返回右表（第二个表）的所有记录，即使左表中没有匹配的记录。如果左表中没有匹配的记录，则结果中左表的字段会显示为<code>NULL</code>。</p><h4 id="例子-2" tabindex="-1"><a class="header-anchor" href="#例子-2" aria-hidden="true">#</a> 例子：</h4><p>使用右连接查询：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> Students<span class="token punctuation">.</span>学号<span class="token punctuation">,</span> Students<span class="token punctuation">.</span>姓名<span class="token punctuation">,</span> Scores<span class="token punctuation">.</span>课程<span class="token punctuation">,</span> Scores<span class="token punctuation">.</span>分数
<span class="token keyword">FROM</span> Students
<span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> Scores <span class="token keyword">ON</span> Students<span class="token punctuation">.</span>学号 <span class="token operator">=</span> Scores<span class="token punctuation">.</span>学号<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果为：</p><table><thead><tr><th style="text-align:left;">学号</th><th style="text-align:left;">姓名</th><th style="text-align:left;">课程</th><th style="text-align:left;">分数</th></tr></thead><tbody><tr><td style="text-align:left;">001</td><td style="text-align:left;">张三</td><td style="text-align:left;">数学</td><td style="text-align:left;">90</td></tr><tr><td style="text-align:left;">002</td><td style="text-align:left;">李四</td><td style="text-align:left;">英语</td><td style="text-align:left;">85</td></tr></tbody></table><p><strong>解释</strong>：右连接返回了右表（成绩表）的所有记录。在这个例子中，因为所有成绩表的记录都能在学生表中找到匹配，所以结果与内连接相同。但如果成绩表中有额外的学号（例如<code>004</code>），而学生表中没有对应的记录（<mark>退学了，或者说作弊了，不参与排名</mark>），那么左表的字段会显示为<code>NULL</code>。</p>`,32),d=[l];function i(o,r){return e(),n("div",null,d)}const c=t(s,[["render",i],["__file","11.Inner join-left join-right join.html.vue"]]);export{c as default};
