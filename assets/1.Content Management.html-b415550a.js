import{_ as n,W as s,X as a,a2 as t}from"./framework-48328e23.js";const e={},p=t(`<h2 id="_1-课程查询" tabindex="-1"><a class="header-anchor" href="#_1-课程查询" aria-hidden="true">#</a> 1. 课程查询</h2><p>界面</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/image.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_1-查询条件" tabindex="-1"><a class="header-anchor" href="#_1-查询条件" aria-hidden="true">#</a> 1. 查询条件：</h3><p>包括：课程名称、课程审核状态、课程发布状态</p><p>课程名称：可以模糊搜索</p><p>课程审核状态：未提交、已提交、审核通过、审核未通过</p><p>课程发布状态：未发布、已发布、已下线（审核不通过的，都没有发布的资格）</p><p>因为是分页查询所以查询条件中还要包括当前页码、每页显示记录数。</p><h3 id="_2-查询结果" tabindex="-1"><a class="header-anchor" href="#_2-查询结果" aria-hidden="true">#</a> 2. 查询结果：</h3><p>查询结果中包括：课程id、课程名称、任务数、创建时间、是否付费、审核状态、类型，操作</p><p>任务数：该课程所包含的课程计划数，即课程章节数。</p><p>是否付费：课程包括免费、收费两种。</p><p>类型：录播、直播。</p><p>因为是分页查询所以查询结果中还要包括总记录数、当前页、每页显示记录数。</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/image-20220915175215298.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-课程course-base表" tabindex="-1"><a class="header-anchor" href="#_3-课程course-base表" aria-hidden="true">#</a> 3. 课程<code>course-base</code>表：</h3><table><thead><tr><th style="text-align:left;">Field</th><th style="text-align:left;">Type</th><th style="text-align:center;">COMMENT</th></tr></thead><tbody><tr><td style="text-align:left;">id</td><td style="text-align:left;"><code>bigint</code></td><td style="text-align:center;">主键，自增，步长为 1</td></tr><tr><td style="text-align:left;">company_id</td><td style="text-align:left;"><code>bigint</code></td><td style="text-align:center;">机构ID</td></tr><tr><td style="text-align:left;">company_name</td><td style="text-align:left;"><code>varchar(255)</code></td><td style="text-align:center;">机构名称</td></tr><tr><td style="text-align:left;">name</td><td style="text-align:left;"><code>varchar(100)</code></td><td style="text-align:center;">课程名称</td></tr><tr><td style="text-align:left;">users</td><td style="text-align:left;"><code>varchar(500)</code></td><td style="text-align:center;">适用人群</td></tr><tr><td style="text-align:left;">tags</td><td style="text-align:left;"><code>varchar(50)</code></td><td style="text-align:center;">课程标签</td></tr><tr><td style="text-align:left;">mt</td><td style="text-align:left;"><code>varchar(20)</code></td><td style="text-align:center;">大分类</td></tr><tr><td style="text-align:left;">mt_name</td><td style="text-align:left;"><code>varchar(255)</code></td><td style="text-align:center;">课程大类名称</td></tr><tr><td style="text-align:left;">st</td><td style="text-align:left;"><code>varchar(20)</code></td><td style="text-align:center;">小分类</td></tr><tr><td style="text-align:left;">st_name</td><td style="text-align:left;"><code>varchar(255)</code></td><td style="text-align:center;">课程小类名称</td></tr><tr><td style="text-align:left;">grade</td><td style="text-align:left;"><code>varchar(32)</code></td><td style="text-align:center;">课程等级</td></tr><tr><td style="text-align:left;">teachmode</td><td style="text-align:left;"><code>varchar(32)</code></td><td style="text-align:center;">教育模式（common普通，record 录播，live直播等）</td></tr><tr><td style="text-align:left;">description</td><td style="text-align:left;"><code>text</code></td><td style="text-align:center;">课程介绍</td></tr><tr><td style="text-align:left;">pic</td><td style="text-align:left;"><code>varchar(500)</code></td><td style="text-align:center;">课程图片</td></tr><tr><td style="text-align:left;">create_date</td><td style="text-align:left;"><code>datetime</code></td><td style="text-align:center;">创建时间</td></tr><tr><td style="text-align:left;">change_date</td><td style="text-align:left;"><code>datetime</code></td><td style="text-align:center;">修改时间</td></tr><tr><td style="text-align:left;">create_people</td><td style="text-align:left;"><code>varchar(50)</code></td><td style="text-align:center;">创建人</td></tr><tr><td style="text-align:left;">change_people</td><td style="text-align:left;"><code>varchar(50)</code></td><td style="text-align:center;">更新人</td></tr><tr><td style="text-align:left;">audit_status</td><td style="text-align:left;"><code>varchar(10)</code></td><td style="text-align:center;">审核状态</td></tr><tr><td style="text-align:left;">audit_mind</td><td style="text-align:left;"><code>varchar(200)</code></td><td style="text-align:center;">审核意见</td></tr><tr><td style="text-align:left;">audit_nums</td><td style="text-align:left;"><code>int</code></td><td style="text-align:center;">审核次数</td></tr><tr><td style="text-align:left;">audit_date</td><td style="text-align:left;"><code>datetime</code></td><td style="text-align:center;">审核时间</td></tr><tr><td style="text-align:left;">audit_people</td><td style="text-align:left;"><code>varchar(50)</code></td><td style="text-align:center;">审核人</td></tr><tr><td style="text-align:left;">status</td><td style="text-align:left;"><code>int</code></td><td style="text-align:center;">1为未发布，0为删除，2已发布</td></tr><tr><td style="text-align:left;">course_pub_id</td><td style="text-align:left;"><code>bigint</code></td><td style="text-align:center;">课程发布标识</td></tr><tr><td style="text-align:left;">course_pub_date</td><td style="text-align:left;"><code>datetime</code></td><td style="text-align:center;">课程发布时间</td></tr></tbody></table><h3 id="_4-什么时候用vo" tabindex="-1"><a class="header-anchor" href="#_4-什么时候用vo" aria-hidden="true">#</a> 4. 什么时候用VO？</h3><p>当前端有多个平台且接口存在差异时就需要设置VO对象用于前端和接口层传输数据。</p><p>此时，Service业务层尽量提供一个业务接口，即使两个前端接口需要的数据不一样，Service可以提供一个最全查询结果，由Controller进行数据整合。</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/image (1).png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如果前端的接口没有多样性且比较固定，此时可以取消VO，只用DTO即可。</p><h3 id="_5-swaager的常用注解" tabindex="-1"><a class="header-anchor" href="#_5-swaager的常用注解" aria-hidden="true">#</a> 5. Swaager的常用注解</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Api</span>：修饰整个类，描述<span class="token class-name">Controller</span>的作用
<span class="token annotation punctuation">@ApiOperation</span>：描述一个类的一个方法，或者说一个接口
<span class="token annotation punctuation">@ApiParam</span>：单个参数描述
<span class="token annotation punctuation">@ApiModel</span>：用对象来接收参数
<span class="token annotation punctuation">@ApiModelProperty</span>：用对象接收参数时，描述对象的一个字段
<span class="token annotation punctuation">@ApiResponse</span>：<span class="token constant">HTTP</span>响应其中<span class="token number">1</span>个描述
<span class="token annotation punctuation">@ApiResponses</span>：<span class="token constant">HTTP</span>响应整体描述
<span class="token annotation punctuation">@ApiIgnore</span>：使用该注解忽略这个<span class="token constant">API</span>
<span class="token annotation punctuation">@ApiError</span> ：发生错误返回的信息
<span class="token annotation punctuation">@ApiImplicitParam</span>：一个请求参数
<span class="token annotation punctuation">@ApiImplicitParams</span>：多个请求参数
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>@ApiImplicitParam属性如下：</p><table><thead><tr><th>属性</th><th>取值</th><th>作用</th></tr></thead><tbody><tr><td>paramType</td><td>查询参数类型</td><td></td></tr><tr><td></td><td>path</td><td>以地址的形式提交数据</td></tr><tr><td></td><td>query</td><td>直接跟参数完成自动映射赋值</td></tr><tr><td></td><td>body</td><td>以流的形式提交仅支持POST</td></tr><tr><td></td><td>header</td><td>参数在request headers里边提交</td></tr><tr><td></td><td>form</td><td>以form表单的形式提交仅支持POST</td></tr><tr><td>dataType</td><td>参数的数据类型</td><td>只作为标志说明，并没有实际验证</td></tr><tr><td></td><td>Long</td><td></td></tr><tr><td></td><td>String</td><td></td></tr><tr><td>name</td><td>接收参数名</td><td></td></tr><tr><td>value</td><td>接收参数的意义描述</td><td></td></tr><tr><td>required</td><td>参数是否必填</td><td></td></tr><tr><td></td><td>TRUE</td><td>必填</td></tr><tr><td></td><td>FALSE</td><td>非必填</td></tr><tr><td>defaultValue</td><td>默认值</td><td></td></tr></tbody></table><h3 id="_6-springboot-接口开发的常用注解有哪些" tabindex="-1"><a class="header-anchor" href="#_6-springboot-接口开发的常用注解有哪些" aria-hidden="true">#</a> 6.SpringBoot 接口开发的常用注解有哪些？</h3><ol><li><strong>@Controller</strong> 标记此类是一个控制器，可以返回视图解析器指定的 HTML 页面。通过 <code>@ResponseBody</code> 可以将结果返回 JSON、XML 数据。</li><li><strong>@RestController</strong> 相当于 <code>@ResponseBody</code> 加 <code>@Controller</code>，实现 REST 接口开发，返回 JSON 数据，不能返回 HTML 页面（<mark>只能用Controller</mark>）。</li><li><strong>@RequestMapping</strong> 定义接口地址，可以标记在类上也可以标记在方法上，支持 HTTP 的 POST、PUT、GET 等方法。</li><li><strong>@PostMapping</strong> 定义 POST 接口，只能标记在方法上，用于添加记录或复杂条件的查询接口。</li><li><strong>@GetMapping</strong> 定义 GET 接口，只能标记在方法上，用于查询接口的定义。</li><li><strong>@PutMapping</strong> 定义 PUT 接口，只能标记在方法上，用于修改接口的定义。</li><li><strong>@DeleteMapping</strong> 定义 DELETE 接口，只能标记在方法上，用于删除接口的定义。</li><li><strong>@RequestBody</strong> 定义在方法上，用于将 JSON 串转换成 Java 对象。</li><li><strong>@PathVariable</strong> 接收请求路径中占位符的值。</li><li><strong>@ApiOperation</strong> Swagger 注解，对接口方法进行说明。</li><li><strong>@Api</strong> Swagger 注解，对接口类进行说明。</li><li><strong>@Autowired</strong> 基于类型注入。</li><li><strong>@Resource</strong> 基于名称注入，如果基于名称注入失败，则转为基于类型注入。</li></ol><h3 id="_7-创建数据字典表" tabindex="-1"><a class="header-anchor" href="#_7-创建数据字典表" aria-hidden="true">#</a> 7. 创建数据字典表</h3><p>如图：</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/image-20250110204623271.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>下边是课程审核状态的定义：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span>
    <span class="token punctuation">{</span><span class="token property">&quot;code&quot;</span><span class="token operator">:</span><span class="token string">&quot;202001&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;desc&quot;</span><span class="token operator">:</span><span class="token string">&quot;审核未通过&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;code&quot;</span><span class="token operator">:</span><span class="token string">&quot;202002&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;desc&quot;</span><span class="token operator">:</span><span class="token string">&quot;未审核&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;code&quot;</span><span class="token operator">:</span><span class="token string">&quot;202003&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;desc&quot;</span><span class="token operator">:</span><span class="token string">&quot;审核通过&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>每一项都由代码和名称组成。</p><p><strong>DictionaryController</strong> ：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/dictionary/code/{code}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">Dictionary</span> <span class="token function">getByCode</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> code<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> dictionaryService<span class="token punctuation">.</span><span class="token function">getByCode</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>ServiceImpl</strong>：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">Dictionary</span> <span class="token function">getByCode</span><span class="token punctuation">(</span><span class="token class-name">String</span> code<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Dictionary</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Dictionary</span><span class="token operator">::</span><span class="token function">getCode</span><span class="token punctuation">,</span> code<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Dictionary</span> dictionary <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getOne</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> dictionary<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-httpclient" tabindex="-1"><a class="header-anchor" href="#_8-httpclient" aria-hidden="true">#</a> 8. Httpclient</h3><p>使用<strong>Httpclient</strong>简单测试</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>POST http<span class="token operator">:</span><span class="token comment">//localhost:63040/course/list?pageNo=2&amp;pageSize=5</span>
Content-Type<span class="token operator">:</span> application/json

<span class="token punctuation">{</span>
<span class="token property">&quot;auditStatus&quot;</span><span class="token operator">:</span> <span class="token string">&quot;202002&quot;</span><span class="token punctuation">,</span>
<span class="token property">&quot;courseName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
<span class="token property">&quot;publishStatus&quot;</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/image-20250110213238827.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>9.查询代码：</p><p>controller：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;课程查询接口&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/course/list&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">PageResult</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CourseBase</span><span class="token punctuation">&gt;</span></span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token class-name">PageParams</span> pageParams<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">QueryCourseParamsDto</span> queryCourseParams<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> courseBaseInfoService<span class="token punctuation">.</span><span class="token function">queryCourseBaseList</span><span class="token punctuation">(</span>pageParams<span class="token punctuation">,</span> queryCourseParams<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>serviceImpl：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">PageResult</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CourseBase</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryCourseBaseList</span><span class="token punctuation">(</span><span class="token class-name">PageParams</span> pageParams<span class="token punctuation">,</span>
    <span class="token class-name">QueryCourseParamsDto</span> queryCourseParamsDto<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">// 构建查询条件对象</span>
    <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CourseBase</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 构建查询条件，根据课程名称查询</span>
    queryWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>queryCourseParamsDto<span class="token punctuation">.</span><span class="token function">getCourseName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">CourseBase</span><span class="token operator">::</span><span class="token function">getName</span><span class="token punctuation">,</span>
        queryCourseParamsDto<span class="token punctuation">.</span><span class="token function">getCourseName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 构建查询条件，根据课程审核状态查询</span>
    queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>queryCourseParamsDto<span class="token punctuation">.</span><span class="token function">getAuditStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">CourseBase</span><span class="token operator">::</span><span class="token function">getAuditStatus</span><span class="token punctuation">,</span>
        queryCourseParamsDto<span class="token punctuation">.</span><span class="token function">getAuditStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 构建查询条件，根据课程发布状态查询</span>
    queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>queryCourseParamsDto<span class="token punctuation">.</span><span class="token function">getPublishStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">CourseBase</span><span class="token operator">::</span><span class="token function">getStatus</span><span class="token punctuation">,</span>
        queryCourseParamsDto<span class="token punctuation">.</span><span class="token function">getPublishStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 分页对象</span>
    <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CourseBase</span><span class="token punctuation">&gt;</span></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>pageParams<span class="token punctuation">.</span><span class="token function">getPageNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pageParams<span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 查询数据内容获得结果</span>
    <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CourseBase</span><span class="token punctuation">&gt;</span></span> pageResult <span class="token operator">=</span> courseBaseMapper<span class="token punctuation">.</span><span class="token function">selectPage</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 获取数据列表</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CourseBase</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> pageResult<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 获取数据总数</span>
    <span class="token keyword">long</span> total <span class="token operator">=</span> pageResult<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 构建结果集</span>
    <span class="token class-name">PageResult</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CourseBase</span><span class="token punctuation">&gt;</span></span> courseBasePageResult <span class="token operator">=</span>
        <span class="token keyword">new</span> <span class="token class-name">PageResult</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> total<span class="token punctuation">,</span> pageParams<span class="token punctuation">.</span><span class="token function">getPageNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pageParams<span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> courseBasePageResult<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_10-最终成果" tabindex="-1"><a class="header-anchor" href="#_10-最终成果" aria-hidden="true">#</a> 10. 最终成果：</h3><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/image-20250111110206606.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_11-跨域需要注意的点" tabindex="-1"><a class="header-anchor" href="#_11-跨域需要注意的点" aria-hidden="true">#</a> 11. 跨域需要注意的点：</h3><p>为什么system服务必须要配置跨域，而content服务可以不配</p><p>因为system是硬编码进去的</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 列表</span>
<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">dictionaryAll</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">params</span><span class="token operator">:</span> any <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token literal-property property">body</span><span class="token operator">:</span> any <span class="token operator">=</span> <span class="token keyword">undefined</span></span><span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>ISystemDictionary<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">createAPI</span><span class="token punctuation">(</span><span class="token string">&#39;http://localhost:63110/system/dictionary/all&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> params<span class="token punctuation">,</span> body<span class="token punctuation">)</span>
	<span class="token keyword">return</span> data
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>而content是使用了代理</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&#39;/api&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// 匹配所有以 /api 开头的请求</span>
    <span class="token literal-property property">target</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VUE_APP_SERVER_API_URL</span><span class="token punctuation">,</span> <span class="token comment">// 目标服务器地址</span>
    <span class="token literal-property property">changeOrigin</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 修改请求的 Origin 为目标地址</span>
    <span class="token literal-property property">ws</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 支持 WebSocket 代理</span>
    <span class="token literal-property property">pathRewrite</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// 重写请求路径</span>
      <span class="token string-property property">&#39;^/api&#39;</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span> <span class="token comment">// 去掉 /api 前缀</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token constant">VUE_APP_SERVER_API_URL</span><span class="token operator">=</span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">63040</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代理服务器的核心思想是：<strong>让前端请求发送到同源的代理服务器，再由代理服务器转发到后端服务器</strong>。由于服务器之间的请求不受同源策略限制，因此可以绕过浏览器的跨域限制。</p><ul><li><strong>前端请求</strong>：<code>http://localhost:8080/api/user</code>（前端页面地址）</li><li><strong>代理服务器</strong>：将 <code>/api</code> 开头的请求转发到后端服务器。</li><li><strong>后端请求</strong>：<code>http://api.example.com/user</code>（后端服务器地址）</li></ul><h2 id="_2-课程分类查询" tabindex="-1"><a class="header-anchor" href="#_2-课程分类查询" aria-hidden="true">#</a> 2. 课程分类查询</h2><p>有树型多级分类，这里两级就够了</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/image-20250111114241429.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>第二级的分类是第一级分类中childrenTreeNodes属性，它是一个数组结构：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
<span class="token property">&quot;id&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;1-2&quot;</span><span class="token punctuation">,</span>
<span class="token property">&quot;isLeaf&quot;</span> <span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
<span class="token property">&quot;isShow&quot;</span> <span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
<span class="token property">&quot;label&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;移动开发&quot;</span><span class="token punctuation">,</span>
<span class="token property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;移动开发&quot;</span><span class="token punctuation">,</span>
<span class="token property">&quot;orderby&quot;</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
<span class="token property">&quot;parentid&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
<span class="token property">&quot;childrenTreeNodes&quot;</span> <span class="token operator">:</span> <span class="token punctuation">[</span>
               <span class="token punctuation">{</span>
                  <span class="token property">&quot;childrenTreeNodes&quot;</span> <span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;id&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;1-2-1&quot;</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;isLeaf&quot;</span> <span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;isShow&quot;</span> <span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;label&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;微信开发&quot;</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;微信开发&quot;</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;orderby&quot;</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;parentid&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;1-2&quot;</span>
               <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>mapper：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 课程分类树型结构查询映射结果 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>treeNodeResultMap<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.xuecheng.system.model.dto.CourseCategoryTreeDto<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 一级数据映射 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>one_id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>one_name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>one_label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>label<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>one_parentid<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>parentid<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>one_orderby<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>orderby<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token comment">&lt;!-- 一级中包含多个二级数据：二级的集合数据 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>collection</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>childrenTreeNodes<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ofType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.xuecheng.system.model.dto.CourseCategoryTreeDto<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 二级数据映射 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>two_id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>two_name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>two_label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>label<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>two_parentid<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>parentid<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>two_orderby<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>orderby<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>collection</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!--课程分类树型结构查询--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectTreeNodes<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>treeNodeResultMap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    select one.id       one_id,
           one.name     one_name,
           one.parentid one_parentid,
           one.orderby  one_orderby,
           one.label    one_label,
           two.id       two_id,
           two.name     two_name,
           two.parentid two_parentid,
           two.orderby  two_orderby,
           two.label    two_label
    from course_category one
             inner join course_category two on one.id = two.parentid
    where one.parentid = 1
      and one.is_show = 1
      and two.is_show = 1
    order by one.orderby,
             two.orderby
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>发现这里采用自连接，适用于分类比较<mark>固定</mark>，层数比较少（二级、三级）的时候</p><p>如果树的层级不确定，此时可以使用MySQL递归实现，使用with语法，如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">with</span> recursive t1 <span class="token keyword">as</span> <span class="token punctuation">(</span>
    <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span>  course_category <span class="token keyword">where</span>  id<span class="token operator">=</span> <span class="token string">&#39;1&#39;</span>
    <span class="token keyword">union</span> <span class="token keyword">all</span>
    <span class="token keyword">select</span> t<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">from</span> course_category t <span class="token keyword">inner</span> <span class="token keyword">join</span> t1 <span class="token keyword">on</span> t1<span class="token punctuation">.</span>id <span class="token operator">=</span> t<span class="token punctuation">.</span>parentid
<span class="token punctuation">)</span>
<span class="token keyword">select</span> <span class="token operator">*</span>  <span class="token keyword">from</span> t1 <span class="token keyword">order</span> <span class="token keyword">by</span> t1<span class="token punctuation">.</span>id<span class="token punctuation">,</span> t1<span class="token punctuation">.</span>orderby
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-with-recursive-t1-as" tabindex="-1"><a class="header-anchor" href="#_1-with-recursive-t1-as" aria-hidden="true">#</a> 1. <code>WITH RECURSIVE t1 AS (...)</code></h4><ul><li><code>WITH RECURSIVE</code> 是一个递归公用表表达式（Common Table Expression，简称 CTE）。</li><li>递归 CTE 用于处理树形或分层数据，比如组织架构或分类结构。</li></ul><h4 id="_2-基础部分-anchor-member" tabindex="-1"><a class="header-anchor" href="#_2-基础部分-anchor-member" aria-hidden="true">#</a> 2. 基础部分（Anchor Member）</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>select * from course_category where id = &#39;1&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>这是递归查询的基础部分，它选出了 ID 为 <code>1</code> 的根节点（即树的起点）。</li></ul><h4 id="_3-递归部分-recursive-member" tabindex="-1"><a class="header-anchor" href="#_3-递归部分-recursive-member" aria-hidden="true">#</a> 3. 递归部分（Recursive Member）</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>select t.* 
from course_category t 
inner join t1 on t1.id = t.parentid
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>递归部分通过 <code>INNER JOIN</code>，将上一次递归找到的节点（<code>t1</code>）与 <code>course_category</code> 表中的数据进行匹配，找到所有子节点。</li><li>条件是：<code>t1.id = t.parentid</code>，即当前节点的 <code>id</code> 和下一级节点的 <code>parentid</code> 匹配。</li><li><code>t</code> 是 <code>course_category</code> 表的别名。</li><li><code>UNION ALL</code>将两个查询的结果集合合并在一起，包含所有的记录</li></ul><h4 id="适用场景" tabindex="-1"><a class="header-anchor" href="#适用场景" aria-hidden="true">#</a> 适用场景</h4><p>通常用于处理层级关系数据，例如：</p><ul><li>课程分类</li><li>组织架构（从某部门开始，递归查找下属部门）。</li><li>文件目录结构（从某目录开始，递归查找子目录和文件）。</li></ul><h4 id="基于递归的代码" tabindex="-1"><a class="header-anchor" href="#基于递归的代码" aria-hidden="true">#</a> 基于递归的代码：</h4><p>编写service接口实现</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CourseCategoryServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">CourseCategoryService</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token class-name">CourseCategoryMapper</span> courseCategoryMapper<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CourseCategoryTreeDto</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryTreeNodes</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CourseCategoryTreeDto</span><span class="token punctuation">&gt;</span></span> courseCategoryTreeDtos <span class="token operator">=</span> courseCategoryMapper<span class="token punctuation">.</span><span class="token function">selectTreeNodes</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//将list转map,以备使用,排除根节点</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">CourseCategoryTreeDto</span><span class="token punctuation">&gt;</span></span> mapTemp <span class="token operator">=</span> courseCategoryTreeDtos<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>item<span class="token operator">-&gt;</span><span class="token operator">!</span>id<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toMap</span><span class="token punctuation">(</span>key <span class="token operator">-&gt;</span> key<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value <span class="token operator">-&gt;</span> value<span class="token punctuation">,</span> <span class="token punctuation">(</span>key1<span class="token punctuation">,</span> key2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> key2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//最终返回的list</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CourseCategoryTreeDto</span><span class="token punctuation">&gt;</span></span> categoryTreeDtos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//依次遍历每个元素,排除根节点</span>
    courseCategoryTreeDtos<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>item<span class="token operator">-&gt;</span><span class="token operator">!</span>id<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getParentid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            categoryTreeDtos<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//找到当前节点的父节点</span>
        <span class="token class-name">CourseCategoryTreeDto</span> courseCategoryTreeDto <span class="token operator">=</span> mapTemp<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getParentid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>courseCategoryTreeDto<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>courseCategoryTreeDto<span class="token punctuation">.</span><span class="token function">getChildrenTreeNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                courseCategoryTreeDto<span class="token punctuation">.</span><span class="token function">setChildrenTreeNodes</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CourseCategoryTreeDto</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//下边开始往ChildrenTreeNodes属性中放子节点</span>
            courseCategoryTreeDto<span class="token punctuation">.</span><span class="token function">getChildrenTreeNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> categoryTreeDtos<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="在线json解析结构" tabindex="-1"><a class="header-anchor" href="#在线json解析结构" aria-hidden="true">#</a> 在线json解析结构：</h4><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/image-20250111161841784.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="前端显示" tabindex="-1"><a class="header-anchor" href="#前端显示" aria-hidden="true">#</a> 前端显示：</h4><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/image-20250111165559617.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_3-新增课程" tabindex="-1"><a class="header-anchor" href="#_3-新增课程" aria-hidden="true">#</a> 3. 新增课程</h2><h2 id="_4-统一异常校验" tabindex="-1"><a class="header-anchor" href="#_4-统一异常校验" aria-hidden="true">#</a> 4.统一异常校验</h2><p>首先在Base工程添加spring-boot-starter-validation的依赖</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-validation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在javax.validation.constraints包下有很多这样的校验注解，直接使用注解定义校验规则即可。</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/asynccode" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>规则如下：</p><figure><img src="https://qtp-1324720525.cos.ap-shanghai.myqcloud.com/blog/image-20250112132639828.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>现在准备对内容管理模块添加课程接口进行参数校验，如下接口</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;新增课程基础信息&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/course&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">CourseBaseInfoDto</span> <span class="token function">createCourseBase</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">AddCourseDto</span> addCourseDto<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//机构id，由于认证系统没有上线暂时硬编码</span>
    <span class="token class-name">Long</span> companyId <span class="token operator">=</span> <span class="token number">1232141425L</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> courseBaseInfoService<span class="token punctuation">.</span><span class="token function">createCourseBase</span><span class="token punctuation">(</span>companyId<span class="token punctuation">,</span>addCourseDto<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此接口使用AddCourseDto模型对象接收参数，所以进入AddCourseDto类，在属性上添加校验规则。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>xuecheng<span class="token punctuation">.</span>content<span class="token punctuation">.</span>model<span class="token punctuation">.</span>dto</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">ApiModel</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">ApiModelProperty</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>constraints<span class="token punctuation">.</span></span><span class="token class-name">NotEmpty</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>constraints<span class="token punctuation">.</span></span><span class="token class-name">Size</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span><span class="token class-name">BigDecimal</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span> 添加课程dto
 * <span class="token keyword">@author</span> Mr.M
 * <span class="token keyword">@date</span> 2022/9/7 17:40
 * <span class="token keyword">@version</span> 1.0
 */</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@ApiModel</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">&quot;AddCourseDto&quot;</span><span class="token punctuation">,</span> description<span class="token operator">=</span><span class="token string">&quot;新增课程基本信息&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AddCourseDto</span> <span class="token punctuation">{</span>

 <span class="token annotation punctuation">@NotEmpty</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;课程名称不能为空&quot;</span><span class="token punctuation">)</span>
 <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;课程名称&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
 <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

 <span class="token annotation punctuation">@NotEmpty</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;适用人群不能为空&quot;</span><span class="token punctuation">)</span>
 <span class="token annotation punctuation">@Size</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;适用人群内容过少&quot;</span><span class="token punctuation">,</span>min <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span>
 <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;适用人群&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
 <span class="token keyword">private</span> <span class="token class-name">String</span> users<span class="token punctuation">;</span>

 <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;课程标签&quot;</span><span class="token punctuation">)</span>
 <span class="token keyword">private</span> <span class="token class-name">String</span> tags<span class="token punctuation">;</span>

 <span class="token annotation punctuation">@NotEmpty</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;课程分类不能为空&quot;</span><span class="token punctuation">)</span>
 <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;大分类&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
 <span class="token keyword">private</span> <span class="token class-name">String</span> mt<span class="token punctuation">;</span>

 <span class="token annotation punctuation">@NotEmpty</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;课程分类不能为空&quot;</span><span class="token punctuation">)</span>
 <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;小分类&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
 <span class="token keyword">private</span> <span class="token class-name">String</span> st<span class="token punctuation">;</span>

 <span class="token annotation punctuation">@NotEmpty</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;课程等级不能为空&quot;</span><span class="token punctuation">)</span>
 <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;课程等级&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
 <span class="token keyword">private</span> <span class="token class-name">String</span> grade<span class="token punctuation">;</span>

 <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;教学模式（普通，录播，直播等）&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
 <span class="token keyword">private</span> <span class="token class-name">String</span> teachmode<span class="token punctuation">;</span>

 <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;课程介绍&quot;</span><span class="token punctuation">)</span>
 <span class="token keyword">private</span> <span class="token class-name">String</span> description<span class="token punctuation">;</span>

 <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;课程图片&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
 <span class="token keyword">private</span> <span class="token class-name">String</span> pic<span class="token punctuation">;</span>

 <span class="token annotation punctuation">@NotEmpty</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;收费规则不能为空&quot;</span><span class="token punctuation">)</span>
 <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;收费规则，对应数据字典&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
 <span class="token keyword">private</span> <span class="token class-name">String</span> charge<span class="token punctuation">;</span>

 <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;价格&quot;</span><span class="token punctuation">)</span>
 <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> price<span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上边用到了@NotEmpty和@Size两个注解，@NotEmpty表示属性不能为空，@Size表示限制属性内容的长短。</p><p>定义好校验规则还需要开启校验，在controller方法中添加@Validated注解，如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;新增课程基础信息&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/course&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">CourseBaseInfoDto</span> <span class="token function">createCourseBase</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token annotation punctuation">@Validated</span> <span class="token class-name">AddCourseDto</span> addCourseDto<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//机构id，由于认证系统没有上线暂时硬编码</span>
    <span class="token class-name">Long</span> companyId <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> courseBaseInfoService<span class="token punctuation">.</span><span class="token function">createCourseBase</span><span class="token punctuation">(</span>companyId<span class="token punctuation">,</span>addCourseDto<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果校验出错Spring会抛出MethodArgumentNotValidException异常，我们需要在统一异常处理器中捕获异常，解析出异常信息。</p><p>代码 如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ResponseBody</span>
<span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span><span class="token class-name">MethodArgumentNotValidException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ResponseStatus</span><span class="token punctuation">(</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">INTERNAL_SERVER_ERROR</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">RestErrorResponse</span> <span class="token function">methodArgumentNotValidException</span><span class="token punctuation">(</span><span class="token class-name">MethodArgumentNotValidException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">BindingResult</span> bindingResult <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getBindingResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> msgList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//将错误信息放在msgList</span>
    bindingResult<span class="token punctuation">.</span><span class="token function">getFieldErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item<span class="token operator">-&gt;</span>msgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getDefaultMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//拼接错误信息</span>
    <span class="token class-name">String</span> msg <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>msgList<span class="token punctuation">,</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;【系统异常】{}&quot;</span><span class="token punctuation">,</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestErrorResponse</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重启内容管理服务。</p><p>使用httpclient进行测试，将必填项设置为空，“适用人群” 属性的内容设置1个字。</p><p>执行测试，接口响应结果如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;errMessage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;课程名称不能为空,课程分类不能为空,适用人群内容过少&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到校验器生效。</p><h2 id="_5-分组校验" tabindex="-1"><a class="header-anchor" href="#_5-分组校验" aria-hidden="true">#</a> 5. 分组校验</h2><p>有时候在同一个属性上设置一个校验规则不能满足要求，比如：订单编号由系统生成，在添加订单时要求订单编号为空，在更新 订单时要求订单编写不能为空。此时就用到了分组校验，同一个属性定义多个校验规则属于不同的分组，比如：添加订单定义@NULL规则属于insert分组，更新订单定义@NotEmpty规则属于update分组，insert和update是分组的名称，是可以修改的。</p><p>下边举例说明</p><p>我们用class类型来表示不同的分组，所以我们定义不同的接口类型（空接口）表示不同的分组，由于校验分组是公用的，所以定义在 base工程中。如下：</p><div class="language-Bash line-numbers-mode" data-ext="Bash"><pre class="language-Bash"><code>public class ValidationGroups {
     public interface Inster{};
     public interface Update{};
     public interface Delete{};
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下边在定义校验规则时指定分组：</p><div class="language-Bash line-numbers-mode" data-ext="Bash"><pre class="language-Bash"><code>@NotEmpty(groups = {ValidationGroups.Inster.class},message = &quot;添加课程名称不能为空&quot;)
@NotEmpty(groups = {ValidationGroups.Update.class},message = &quot;修改课程名称不能为空&quot;)
// @NotEmpty(message = &quot;课程名称不能为空&quot;)
 @ApiModelProperty(value = &quot;课程名称&quot;, required = true)
 private String name;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在Controller方法中启动校验规则指定要使用的分组名：</p><div class="language-Bash line-numbers-mode" data-ext="Bash"><pre class="language-Bash"><code>@ApiOperation(&quot;新增课程基础信息&quot;)
@PostMapping(&quot;/course&quot;)
public CourseBaseInfoDto createCourseBase(@RequestBody @Validated({ValidationGroups.Inster.class}) AddCourseDto addCourseDto){
    //机构id，由于认证系统没有上线暂时硬编码
    Long companyId = 1L;
  return courseBaseInfoService.createCourseBase(companyId,addCourseDto);
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再次测试，由于这里指定了Insert分组，所以抛出 异常信息：添加课程名称不能为空。</p><p>如果修改分组为ValidationGroups.Update.class，异常信息为：修改课程名称不能为空。</p>`,120),o=[p];function c(l,i){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","1.Content Management.html.vue"]]);export{r as default};
